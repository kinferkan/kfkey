{
  "common": {
    "search": "Search",
    "searchPlaceholder": "Search shortcuts, tools or descriptions...",
    "favorites": "Favorites",
    "settings": "Settings",
    "language": "Language",
    "theme": "Theme",
    "light": "Light",
    "dark": "Dark",
    "system": "System",
    "loading": "Loading...",
    "error": "Error",
    "noResults": "No results found",
    "tryAgain": "Try again",
    "back": "Back",
    "home": "Home",
    "about": "About",
    "contact": "Contact"
  },
  "navigation": {
    "tools": "Tools",
    "categories": "Categories",
    "allTools": "All Tools",
    "popularTools": "Popular Tools",
    "recentlyUsed": "Recently Used"
  },
  "categories": {
    "ide": "IDE & Editors",
    "design": "Design Tools",
    "browser": "Browser Tools",
    "terminal": "Terminal & CLI",
    "database": "Database Tools",
    "other": "Other Tools"
  },
  "tools": {
    "vscode": "Visual Studio Code",
    "intellij": "IntelliJ IDEA",
    "webstorm": "WebStorm",
    "pycharm": "PyCharm",
    "goland": "GoLand",
    "clion": "CLion",
    "androidstudio": "Android Studio",
    "xcode": "Xcode",
    "atom": "Atom",
    "sublime": "Sublime Text",
    "vim": "Vim",
    "emacs": "Emacs",
    "notepadpp": "Notepad++",
    "brackets": "Brackets",
    "eclipse": "Eclipse",
    "hbuilderx": "HBuilder X",
    "photoshop": "Adobe Photoshop",
    "figma": "Figma",
    "chrome-devtools": "Chrome DevTools",
    "firefox-devtools": "Firefox DevTools"
  },
  "toolGrid": {
    "myFavorites": "My Favorites",
    "allTools": "All Tools",
    "tools": "Tools",
    "foundTools": "Found {{count}} tools",
    "popularity": "Popularity",
    "name": "Name",
    "updated": "Updated",
    "hotRecommendations": "Hot Recommendations",
    "hot": "Hot",
    "shortcuts": "{{count}} shortcuts",
    "popularityScore": "Popularity: {{score}}",
    "updatedOn": "Updated on {{date}}",
    "noFavoriteTools": "No favorite tools yet",
    "noTools": "No tools available",
    "clickHeartToFavorite": "Click the heart icon on tool cards to favorite tools",
    "noCategoryTools": "No tools available in this category",
    "items": "items"
  },
  "shortcuts": {
    "title": "Keyboard Shortcuts",
    "description": "Description",
    "shortcut": "Shortcut",
    "category": "Category",
    "platform": "Platform",
    "windows": "Windows",
    "mac": "Mac",
    "linux": "Linux",
    "general": "General",
    "editing": "Editing",
    "navigation": "Navigation",
    "search": "Search & Replace",
    "debugging": "Debugging",
    "refactoring": "Refactoring",
    "version_control": "Version Control",
    "file_management": "File Management",
    "view": "View",
    "window": "Window Management"
  },
  "heatmap": {
    "title": "Keyboard Heatmap",
    "description": "Interactive keyboard visualization of shortcut usage",
    "clickKey": "Click a key to view related shortcuts",
    "noShortcuts": "No shortcuts",
    "keyUsage": "Key usage",
    "relatedShortcuts": "Related Shortcuts",
    "keys": {
      "esc": "Esc",
      "f1": "F1",
      "f2": "F2",
      "f3": "F3",
      "f4": "F4",
      "f5": "F5",
      "f6": "F6",
      "f7": "F7",
      "f8": "F8",
      "f9": "F9",
      "f10": "F10",
      "f11": "F11",
      "f12": "F12",
      "backspace": "Backspace",
      "delete": "Delete",
      "enter": "Enter",
      "return": "Return",
      "tab": "Tab",
      "caps": "Caps",
      "shift": "Shift",
      "ctrl": "Ctrl",
      "alt": "Alt",
      "win": "Win",
      "cmd": "Cmd",
      "option": "Option",
      "fn": "Fn",
      "space": "Space"
    }
  },
  "favorites": {
    "title": "My Favorites",
    "description": "Your favorite tools and shortcuts",
    "addToFavorites": "Add to Favorites",
    "removeFromFavorites": "Remove from Favorites",
    "noFavorites": "No favorites yet",
    "addSomeFavorites": "Add some tools to favorites to view them here"
  },
  "search": {
    "title": "Search Results",
    "searchResults": "Search Results",
    "foundResults": "Found {{count}} results for \"{{query}}\"",
    "noResults": "No results found for \"{{query}}\"",
    "suggestions": "Try searching for:",
    "popularSearches": "Popular Searches",
    "recentSearches": "Recent Searches"
  },
  "footer": {
    "description": "Professional developer keyboard shortcut navigation platform",
    "allRightsReserved": "All Rights Reserved",
    "privacyPolicy": "Privacy Policy",
    "termsOfService": "Terms of Service",
    "support": "Support"
  },
  "meta": {
    "title": "KeyFlow - Developer Shortcut Navigation Platform",
    "description": "KeyFlow is a professional shortcut navigation platform that provides comprehensive shortcuts for mainstream IDEs and editors such as VSCode, IntelliJ IDEA, WebStorm, and PyCharm. With interactive heatmap and global search features, it enhances developer productivity.",
    "keywords": "shortcuts, developer tools, VSCode shortcuts, IntelliJ IDEA shortcuts, WebStorm shortcuts, PyCharm shortcuts, programmer tools, IDE shortcuts, editor shortcuts, development efficiency"
  },
  "toolDetail": {
    "allPlatforms": "All Platforms",
    "macOSOnly": "macOS Only",
    "detected": "Detected",
    "searchShortcuts": "Search shortcuts...",
    "allCategories": "All Categories",
    "showing": "Showing {{filtered}} / {{total}} shortcuts",
    "keyboardHeatmap": "Keyboard Heatmap",
    "shortcutList": "Shortcut List",
    "interactiveKeyboardHeatmap": "Interactive Keyboard Heatmap",
    "heatmapDescription": "Click keyboard keys to view corresponding shortcuts. Color intensity represents usage frequency",
    "platforms": {
      "win": "Windows",
      "mac": "macOS",
      "linux": "Linux"
    },
    "toolIntroduction": "Tool Introduction",
    "shortcutKeys": "Shortcut Keys",
    "description": "Description",
    "category": "Category",
    "platform": "Platform",
    "none": "None",
    "low": "Low",
    "medium": "Medium",
    "high": "High",
    "veryHigh": "Very High"
  },
  "shortcutList": {
    "noShortcutsFound": "No shortcuts found",
    "adjustFilters": "Try adjusting your filters or search query",
    "totalShortcuts": "{{count}} shortcuts in {{categories}} categories",
    "byCategory": "By Category",
    "byDescription": "By Description",
    "items": "items",
    "allPlatforms": "All Platforms",
    "copySuccess": "Copied to clipboard",
    "copy": "Copy",
    "copied": "Copied"
  },
  "keyboardHeatmap": {
    "usageFrequency": "Usage frequency",
    "none": "None",
    "low": "Low",
    "medium": "Medium",
    "high": "High",
    "veryHigh": "Very High",
    "moreShortcuts": "{{count}} more shortcuts",
    "noShortcuts": "No shortcuts",
    "relatedShortcuts": "Related Shortcuts"
  },
  "toolDescriptions": {
    "vscode": "Lightweight code editor developed by Microsoft, supporting multiple programming languages and a rich plugin ecosystem.",
    "sublime": "High-performance text editor known for its fast response and powerful multi-cursor editing capabilities.",
    "intellij-java": "Java IDE developed by JetBrains, providing powerful code analysis, refactoring, and debugging features, the preferred tool for Java development.",
    "eclipse": "Open-source integrated development environment mainly used for Java development, supporting multiple programming languages.",
    "android-studio": "Google's official Android app development IDE, built on IntelliJ IDEA.",
    "xcode": "Apple's official iOS and macOS app development IDE, running only on macOS.",
    "hbuilderx": "Professional front-end IDE developed by DCloud, optimized for uni-app and 5+App development.",
    "webstorm": "Professional web front-end IDE developed by JetBrains, providing powerful support for JavaScript and related technologies.",
    "goland": "Go language IDE developed by JetBrains, providing intelligent code assistance, debugging, and testing tools for Go development.",
    "pycharm": "Python IDE developed by JetBrains, providing intelligent code completion, inspection, debugging, and refactoring features.",
    "clion": "C/C++ development environment developed by JetBrains, providing intelligent code assistance and powerful debugging features.",
    "atom": "Open source text editor developed by GitHub, highly customizable, although updates have ceased it still has many users.",
    "photoshop": "Professional image editing software from Adobe, the industry standard for digital image processing.",
    "figma": "Modern collaborative UI design tool that supports real-time collaboration and prototyping.",
    "chrome-devtools": "Built-in developer tools for Google Chrome browser, used for web debugging and performance analysis.",
    "firefox-devtools": "Built-in developer tools for Mozilla Firefox browser, providing powerful web debugging and analysis capabilities."
  },
  "shortcutDescriptions": {
    "command_palette": "Command Palette",
    "quick_open": "Quick Open",
    "new_window": "New Window",
    "close_window": "Close Window",
    "new_file": "New File",
    "open_file": "Open File",
    "save": "Save",
    "save_as": "Save As",
    "save_all": "Save All",
    "close": "Close",
    "close_all": "Close All",
    "reopen_closed": "Reopen Closed Editor",
    "keep_preview": "Keep Preview Mode Editor Open",
    "next_tab": "Open Next",
    "prev_tab": "Open Previous",
    "copy_path": "Copy Path of Active File",
    "reveal_in_explorer": "Reveal Active File in Explorer",
    "show_in_new_window": "Show Active File in New Window",
    "find_action": "Find Action",
    "search_everywhere": "Search Everywhere",
    "go_to_class": "Go to Class",
    "go_to_file": "Go to File",
    "go_to_symbol": "Go to Symbol",
    "duplicate_line": "Duplicate Line",
    "delete_line": "Delete Line",
    "toggle_comment": "Toggle Comment",
    "indent": "Increase Indent",
    "outdent": "Decrease Indent",
    "find_in_file": "Find in Current File",
    "find_in_project": "Find in Project",
    "find_next": "Find Next",
    "toggle_tree_view": "Toggle Tree View",
    "toggle_fullscreen": "Toggle Full Screen",
    "increase_font_size": "Increase Font Size",
    "add_cursor_below": "Add Cursor Below",
    "add_cursor_above": "Add Cursor Above",
    "duplicate_line_selection": "Duplicate Line or Selection",
    "toggle_line_comment": "Toggle Line Comment",
    "block_comment": "Block Comment",
    "go_to_declaration": "Go to Declaration",
    "go_to_implementation": "Go to Implementation",
    "find_usages": "Find Usages",
    "rename": "Rename",
    "extract_method": "Extract Method",
    "extract_variable": "Extract Variable",
    "run": "Run",
    "debug": "Debug",
    "toggle_breakpoint": "Toggle Breakpoint",
    "switch_header_source": "Switch Between Header and Source Files",
    "optimize_includes": "Optimize Includes",
    "format_code": "Format Code",
    "show_keybindings": "Show Key Bindings",
    "open_resource": "Open Resource",
    "open_type": "Open Type",
    "open_search_dialog": "Open Search Dialog",
    "find_previous": "Find Previous",
    "go_to_line": "Go to Line",
    "go_to_last_edit": "Go to Last Edit Location",
    "next_problem": "Next Problem",
    "previous_problem": "Previous Problem",
    "new_project": "New Project",
    "save_file": "Save File",
    "close_current_file": "Close Current File",
    "close_all_files": "Close All Files",
    "reopen_closed_file": "Reopen Closed File",
    "go_to_file": "Go to File",
    "command_palette": "Command Palette",
    "go_to_symbol": "Go to Symbol",
    "go_to_definition": "Go to Definition",
    "peek_definition": "Peek Definition",
    "find_references": "Find References",
    "go_back": "Go Back",
    "go_forward": "Go Forward",
    "undo": "Undo",
    "redo": "Redo",
    "cut": "Cut",
    "copy": "Copy",
    "paste": "Paste",
    "select_all": "Select All",
    "select_line": "Select Line",
    "select_word": "Select Word",
    "select_all_words": "Select All Words",
    "delete_line": "Delete Line",
    "duplicate_line": "Duplicate Line",
    "move_line_up": "Move Line Up",
    "move_line_down": "Move Line Down",
    "add_cursor_above": "Add Cursor Above",
    "add_cursor_below": "Add Cursor Below",
    "add_cursor": "Add Cursor",
    "undo_cursor": "Undo Cursor",
    "find": "Find",
    "replace": "Replace",
    "find_in_files": "Find in Files",
    "replace_in_files": "Replace in Files",
    "find_next": "Find Next",
    "find_previous": "Find Previous",
    "format_document": "Format Document",
    "format_selection": "Format Selection",
    "toggle_line_comment": "Toggle Line Comment",
    "toggle_block_comment": "Toggle Block Comment",
    "fold_region": "Fold Region",
    "unfold_region": "Unfold Region",
    "fold_all": "Fold All",
    "unfold_all": "Unfold All",
    "run_to_device": "Run to Device",
    "run_in_browser": "Run in Browser",
    "publish": "Publish",
    "refresh": "Refresh",
    "trigger_suggest": "Trigger Suggest",
    "trigger_parameter_hints": "Trigger Parameter Hints",
    "select_suggestion": "Select Suggestion",
    "toggle_sidebar": "Toggle Sidebar",
    "show_explorer": "Show Explorer",
    "show_search": "Show Search",
    "show_scm": "Show Source Control",
    "show_debug": "Show Debug",
    "show_extensions": "Show Extensions",
    "toggle_fullscreen": "Toggle Fullscreen",
    "new_terminal": "New Terminal",
    "toggle_terminal": "Toggle Terminal",
    "open_devtools": "Open Developer Tools",
    "inspect_element": "Inspect Element",
    "switch_to_inspector_panel": "Switch to Inspector Panel",
    "switch_to_console_panel": "Switch to Console Panel",
    "switch_to_debugger_panel": "Switch to Debugger Panel",
    "switch_to_network_panel": "Switch to Network Panel",
    "clear_console": "Clear Console",
    "execute_console_command": "Execute Console Command",
    "console_multiline_input": "Console Multiline Input",
    "continue_execution": "Continue Execution",
    "step_over": "Step Over",
    "step_into": "Step Into",
    "step_out": "Step Out",
    "responsive_design_mode": "Responsive Design Mode",
    "use_eyedropper_in_inspector": "Use Eyedropper in Inspector",
    "switch_between_test_and_code": "Switch Between Test and Code",
    "implement_interface": "Implement Interface",
    "optimize_imports": "Optimize Imports",
    "override_methods": "Override Methods",
    "implement_methods": "Implement Methods",
    "generate_code": "Generate Code (Getters, Setters, Constructors, etc.)",
    "go_to_super": "Go to Super Class/Method",
    "extract_field": "Extract Field",
    "go_to_anything": "Go to Anything",
    "go_to_symbol_in_project": "Go to Symbol in Project",
    "split_into_lines": "Split Selection into Lines",
    "expand_selection_to_brackets": "Expand Selection to Brackets",
    "jump_to_matching_bracket": "Jump to Matching Bracket",
    "find_file_by_name": "Find File by Name",
    "recent_files": "Recent Files",
    "code_completion": "Code Completion",
    "open": "Open",
    "build": "Build",
    "clean_build_folder": "Clean Build Folder",
    "test": "Test",
    "new": "New",
    "save_for_web": "Save for Web",
    "redo": "Redo",
    "open_file_browser": "Open File Browser",
    "save_to_version_history": "Save to Version History",
    "export": "Export",
    "move_tool": "Move Tool",
    "frame_tool": "Frame Tool",
    "rectangle_tool": "Rectangle Tool",
    "ellipse_tool": "Ellipse Tool",
    "line_tool": "Line Tool",
    "text_tool": "Text Tool",
    "open_devtools_focus_elements": "Open DevTools and Focus Elements Panel",
    "switch_to_elements_panel": "Switch to Elements Panel",
    "switch_to_sources_panel": "Switch to Sources Panel",
    "edit_html_element": "Edit HTML Element",
    "hide_element": "Hide Element",
    "show_intention_actions": "Show Intention Actions and Quick Fixes",
    "open_settings_dialog": "Open Settings Dialog",
    "open_project_structure": "Open Project Structure Dialog",
    "vcs_commit": "VCS Commit",
    "vcs_push": "VCS Push",
    "save_all_files": "Save All Files",
    "close_current_tab": "Close Current Tab",
    "close_all_tabs": "Close All Tabs",
    "reopen_closed_tab": "Reopen Closed Tab",
    "recently_edited_files": "Recently Edited Files",
    "toggle_project_tool_window": "Toggle Project Tool Window",
    "go_to_super_class": "Go to Super Class",
    "previous_edit_location": "Previous Edit Location",
    "next_edit_location": "Next Edit Location",
    "switch_between_open_files": "Switch Between Open Files",
    "delete_current_line": "Delete Current Line",
    "expand_selection": "Expand Selection",
    "shrink_selection": "Shrink Selection",
    "select_current_line": "Select Current Line",
    "find_usages_in_file": "Find Usages in File",
    "show_usages": "Show Usages",
    "extract_constant": "Extract Constant",
    "extract_parameter": "Extract Parameter",
    "move_refactor": "Move",
    "safe_delete": "Safe Delete",
    "debug_run": "Debug Run",
    "normal_run": "Normal Run",
    "view_breakpoints": "View Breakpoints",
    "resume_program": "Resume Program",
    "step_over": "Step Over",
    "step_into": "Step Into",
    "step_out": "Step Out",
    "run_to_cursor": "Run to Cursor",
    "evaluate_expression": "Evaluate Expression",
    "insert_live_template": "Insert Live Template",
    "surround_with": "Surround With",
    "auto_indent_lines": "Auto Indent Lines",
    "build_project": "Build Project",
    "rebuild_project": "Rebuild Project",
    "run_configuration_selection": "Run Configuration Selection",
    "debug_configuration_selection": "Debug Configuration Selection",
    "sync_project_with_gradle": "Sync Project with Gradle Files",
    "synchronize": "Synchronize",
    "maximize_editor": "Maximize Editor",
    "project_tool_window": "Project Tool Window",
    "favorites_tool_window": "Favorites Tool Window",
    "find_tool_window": "Find Tool Window",
    "run_tool_window": "Run Tool Window",
    "debug_tool_window": "Debug Tool Window",
    "todo_tool_window": "TODO Tool Window",
    "structure_tool_window": "Structure Tool Window",
    "version_control_tool_window": "Version Control Tool Window",
    "messages_tool_window": "Messages Tool Window",
    "close_active_tool_window": "Close Active Tool Window",
    "basic_code_completion": "Basic Code Completion",
    "smart_code_completion": "Smart Code Completion",
    "parameter_info": "Parameter Info",
    "quick_documentation": "Quick Documentation Lookup",
    "quick_definition_lookup": "Quick Definition Lookup",
    "error_description": "Error Description",
    "recent_files": "Recent Files",
    "replace_in_current_file": "Replace in Current File",
    "replace_in_project": "Replace in Project"
  },
  "shortcutCategories": {
    "general": "General",
    "file": "File",
    "navigation": "Navigation",
    "editing": "Editing",
    "search": "Search & Replace",
    "debugging": "Debugging",
    "refactoring": "Refactoring",
    "version_control": "Version Control",
    "view": "View",
    "window": "Window Management",
    "multi_cursor": "Multi Cursor",
    "run": "Run",
    "cpp_specific": "C/C++ Specific",
    "help": "Help",
    "formatting": "Formatting",
    "comment": "Comment",
    "code_folding": "Code Folding",
    "uni_app": "uni-app",
    "intelligence": "Intelligence",
    "terminal": "Terminal",
    "basics": "Basics",
    "panel_navigation": "Panel Navigation",
    "console": "Console",
    "go_specific": "Go Specific",
    "java_specific": "Java Specific",
    "selection": "Selection",
    "code": "Code",
    "build": "Build",
    "testing": "Testing",
    "tools": "Tools",
    "elements_panel": "Elements Panel",
    "android_development": "Android Development",
    "code_generation": "Code Generation"
  },
  "vscodePage": {
    "pageTitle": "Visual Studio Code Tool Introduction",
    "back": "Back",
    "mainTitle": "Complete Guide to Visual Studio Code Keyboard Shortcuts",
    "introText": "Visual Studio Code (VSCode for short) is a free, open-source modern lightweight code editor developed by Microsoft. It supports almost all major programming languages and has a rich plugin ecosystem, making it one of the most popular code editors today.",
    "whyUseShortcutsTitle": "Why Use VSCode Keyboard Shortcuts?",
    "benefitsText": "Mastering VSCode keyboard shortcuts can significantly improve your development efficiency:",
    "benefit1": "Improve development efficiency: Avoid frequent mouse switching and focus on code writing",
    "benefit2": "Reduce repetitive operations: Complete complex tasks with one click",
    "benefit3": "Professional image: Proficient use of shortcuts is a hallmark of professional developers",
    "benefit4": "Reduce fatigue: Reduce hand movement and minimize repetitive strain injuries",
    "usageTipsTitle": "VSCode Keyboard Shortcut Usage Tips",
    "tipsText": "VSCode's shortcut system is very powerful. Mastering the following tips can help you use it better:",
    "tip1": "Start with basics: First master the most commonly used editing shortcuts, such as copy (Ctrl+C), paste (Ctrl+V), undo (Ctrl+Z), etc.",
    "tip2": "Progress gradually: Learn navigation shortcuts, such as quick open file (Ctrl+P), command palette (Ctrl+Shift+P)",
    "tip3": "Use search effectively: Use the command palette (Ctrl+Shift+P) to quickly find and execute any command",
    "tip4": "Customize shortcuts: Customize shortcuts according to personal habits and work requirements",
    "tip5": "Combine usage: Using multiple shortcuts in combination can complete complex operations",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "VSCode keyboard shortcuts differ slightly on different operating systems, mainly because different systems define certain keys differently. For example, the Ctrl key is used on Windows and Linux, while the Cmd key is used on macOS. This page provides shortcut comparisons for each platform, and you can choose to view based on your system.",
    "commonShortcutsTitle": "Detailed Explanation of Common Shortcut Categories",
    "generalCategory": "General Shortcuts",
    "fileOperationsCategory": "File Operation Shortcuts",
    "editOperationsCategory": "Edit Operation Shortcuts",
    "navigationCategory": "Navigation Shortcuts",
    "multiCursorCategory": "Multi-Cursor Editing",
    "bestPracticesTitle": "Best Practice Recommendations",
    "bestPracticesText": "To better use VSCode keyboard shortcuts, it is recommended to follow these best practices:",
    "practice1": "Progress gradually: Don't try to memorize all shortcuts at once, start with the most commonly used ones",
    "practice2": "Practice exercises: Consciously use shortcuts in daily work to form muscle memory",
    "practice3": "Customize settings: Adjust shortcut settings according to personal habits",
    "practice4": "Use plugins: Install shortcut-related plugins, such as \"Shortcut Menu Bar\" which can display commonly used shortcuts",
    "practice5": "Regular review: Regularly check the shortcut list to discover and learn new shortcuts",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering VSCode keyboard shortcuts is an important way to improve development efficiency. By using shortcuts appropriately, you can focus more on code writing, reduce repetitive operations, and improve work efficiency. We hope this guide will help you better use VSCode and enhance your development experience."
  },
  "sublimePage": {
    "pageTitle": "Sublime Text Tool Introduction",
    "back": "Back",
    "mainTitle": "Complete Guide to Sublime Text Keyboard Shortcuts",
    "introText": "Sublime Text is a popular text editor known for its speed, clean interface, and powerful features. It supports multiple programming and markup languages, making it especially suitable for writing code, markup, and prose.",
    "whyUseShortcutsTitle": "Why Use Sublime Text Keyboard Shortcuts?",
    "benefitsText": "Mastering Sublime Text keyboard shortcuts can significantly improve your editing efficiency:",
    "benefit1": "Improve editing efficiency: Avoid frequent mouse switching and focus on text writing",
    "benefit2": "Reduce repetitive operations: Complete complex tasks with one click",
    "benefit3": "Professional image: Proficient use of shortcuts is a hallmark of professional developers",
    "benefit4": "Reduce fatigue: Reduce hand movement and minimize repetitive strain injuries",
    "usageTipsTitle": "Sublime Text Keyboard Shortcut Usage Tips",
    "tipsText": "Sublime Text's shortcut system is very powerful. Mastering the following tips can help you use it better:",
    "tip1": "Start with basics: First master the most commonly used editing shortcuts, such as copy (Ctrl+C), paste (Ctrl+V), undo (Ctrl+Z), etc.",
    "tip2": "Progress gradually: Learn navigation shortcuts, such as quick open file (Ctrl+P), command palette (Ctrl+Shift+P)",
    "tip3": "Use search effectively: Use the command palette (Ctrl+Shift+P) to quickly find and execute any command",
    "tip4": "Customize shortcuts: Customize shortcuts according to personal habits and work requirements",
    "tip5": "Combine usage: Using multiple shortcuts in combination can complete complex operations",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "Sublime Text keyboard shortcuts differ slightly on different operating systems, mainly because different systems define certain keys differently. For example, the Ctrl key is used on Windows and Linux, while the Cmd key is used on macOS. This page provides shortcut comparisons for each platform, and you can choose to view based on your system.",
    "commonShortcutsTitle": "Detailed Explanation of Common Shortcut Categories",
    "generalCategory": "General Shortcuts",
    "editingCategory": "Editing Shortcuts",
    "navigationCategory": "Navigation Shortcuts",
    "multiCursorCategory": "Multi-Cursor Editing",
    "selectWord": "Select Current Word",
    "selectAllWords": "Select All Same Words",
    "selectLine": "Select Entire Line",
    "gotoSymbol": "Go to Symbol",
    "gotoLine": "Go to Line",
    "addCursor": "Add Cursor",
    "addCursorAbove": "Add Cursor Above",
    "addCursorBelow": "Add Cursor Below",
    "bestPracticesTitle": "Best Practice Recommendations",
    "bestPracticesText": "To better use Sublime Text keyboard shortcuts, it is recommended to follow these best practices:",
    "practice1": "Progress gradually: Don't try to memorize all shortcuts at once, start with the most commonly used ones",
    "practice2": "Practice exercises: Consciously use shortcuts in daily work to form muscle memory",
    "practice3": "Customize settings: Adjust shortcut settings according to personal habits",
    "practice4": "Use plugins: Install shortcut-related plugins to enhance editor functionality",
    "practice5": "Regular review: Regularly check the shortcut list to discover and learn new shortcuts",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering Sublime Text keyboard shortcuts is an important way to improve editing efficiency. By using shortcuts appropriately, you can focus more on text writing, reduce repetitive operations, and improve work efficiency. We hope this guide will help you better use Sublime Text and enhance your editing experience."
  },
  "intellijPage": {
    "pageTitle": "IntelliJ IDEA Tool Introduction",
    "back": "Back",
    "mainTitle": "Complete Guide to IntelliJ IDEA Keyboard Shortcuts",
    "introText": "IntelliJ IDEA is a powerful Java integrated development environment developed by JetBrains. It provides intelligent code assistance, refactoring, debugging, and testing capabilities, making it the preferred tool for Java developers. IntelliJ IDEA is renowned for its excellent code analysis and developer experience.",
    "whyUseShortcutsTitle": "Why Use IntelliJ IDEA Keyboard Shortcuts?",
    "benefitsText": "Mastering IntelliJ IDEA keyboard shortcuts can significantly improve your development efficiency:",
    "benefit1": "Improve development efficiency: Avoid frequent mouse switching and focus on code writing",
    "benefit2": "Reduce repetitive operations: Complete complex tasks with one click",
    "benefit3": "Professional image: Proficient use of shortcuts is a hallmark of professional developers",
    "benefit4": "Reduce fatigue: Reduce hand movement and minimize repetitive strain injuries",
    "usageTipsTitle": "IntelliJ IDEA Keyboard Shortcut Usage Tips",
    "tipsText": "IntelliJ IDEA's shortcut system is very powerful. Mastering the following tips can help you use it better:",
    "tip1": "Start with basics: First master the most commonly used editing shortcuts, such as copy (Ctrl+C), paste (Ctrl+V), undo (Ctrl+Z), etc.",
    "tip2": "Progress gradually: Learn navigation shortcuts, such as quick open file (Ctrl+Shift+N), find class (Ctrl+N)",
    "tip3": "Use search effectively: Use the search function (Ctrl+Shift+A) to quickly find and execute any command",
    "tip4": "Customize shortcuts: Customize shortcuts according to personal habits and work requirements",
    "tip5": "Combine usage: Using multiple shortcuts in combination can complete complex operations",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "IntelliJ IDEA keyboard shortcuts differ slightly on different operating systems, mainly because different systems define certain keys differently. For example, the Ctrl key is used on Windows and Linux, while the Cmd key is used on macOS. This page provides shortcut comparisons for each platform, and you can choose to view based on your system.",
    "commonShortcutsTitle": "Detailed Explanation of Common Shortcut Categories",
    "generalCategory": "General Shortcuts",
    "fileOperationsCategory": "File Operation Shortcuts",
    "editOperationsCategory": "Edit Operation Shortcuts",
    "navigationCategory": "Navigation Shortcuts",
    "multiCursorCategory": "Multi-Cursor Editing",
    "refactoringCategory": "Refactoring Shortcuts",
    "debuggingCategory": "Debugging Shortcuts",
    "vcsCategory": "Version Control Shortcuts",
    "openQuickly": "Open file quickly",
    "findInPath": "Find in path",
    "replaceInPath": "Replace in path",
    "duplicateLine": "Duplicate current line",
    "deleteLine": "Delete current line",
    "smartTypeCompletion": "Smart type completion",
    "basicCompletion": "Basic completion",
    "parameterInfo": "Parameter info",
    "goToDeclaration": "Go to declaration",
    "findUsages": "Find usages",
    "renameSymbol": "Rename symbol",
    "safeDelete": "Safe delete",
    "extractMethod": "Extract method",
    "extractVariable": "Extract variable",
    "runProgram": "Run program",
    "debugProgram": "Debug program",
    "stepOver": "Step over",
    "stepInto": "Step into",
    "resumeProgram": "Resume program",
    "stopProgram": "Stop program",
    "commitChanges": "Commit changes",
    "updateProject": "Update project",
    "bestPracticesTitle": "Best Practice Recommendations",
    "bestPracticesText": "To better use IntelliJ IDEA keyboard shortcuts, it is recommended to follow these best practices:",
    "practice1": "Progress gradually: Don't try to memorize all shortcuts at once, start with the most commonly used ones",
    "practice2": "Practice exercises: Consciously use shortcuts in daily work to form muscle memory",
    "practice3": "Customize settings: Adjust shortcut settings according to personal habits",
    "practice4": "Use Find Action: Search for all available actions through Ctrl+Shift+A",
    "practice5": "Regular review: Regularly check the shortcut list to discover and learn new shortcuts",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering IntelliJ IDEA keyboard shortcuts is an important way to improve development efficiency. By using shortcuts appropriately, you can focus more on code writing, reduce repetitive operations, and improve work efficiency. We hope this guide will help you better use IntelliJ IDEA and enhance your development experience."
  },
  "webstormPage": {
    "pageTitle": "WebStorm Tool Introduction",
    "back": "Back",
    "mainTitle": "Complete Guide to WebStorm Keyboard Shortcuts",
    "introText": "WebStorm is a powerful integrated development environment for modern JavaScript development developed by JetBrains. It provides intelligent code assistance, debugging, testing, and version control capabilities, making it the preferred tool for JavaScript developers.",
    "whyUseShortcutsTitle": "Why Use WebStorm Keyboard Shortcuts?",
    "benefitsText": "Mastering WebStorm keyboard shortcuts can significantly improve your development efficiency:",
    "benefit1": "Improve development efficiency: Avoid frequent mouse switching and focus on code writing",
    "benefit2": "Reduce repetitive operations: Complete complex tasks with one click",
    "benefit3": "Professional image: Proficient use of shortcuts is a hallmark of professional developers",
    "benefit4": "Reduce fatigue: Reduce hand movement and minimize repetitive strain injuries",
    "usageTipsTitle": "WebStorm Keyboard Shortcut Usage Tips",
    "tipsText": "WebStorm's shortcut system is very powerful. Mastering the following tips can help you use it better:",
    "tip1": "Start with basics: First master the most commonly used editing shortcuts, such as copy (Ctrl+C), paste (Ctrl+V), undo (Ctrl+Z), etc.",
    "tip2": "Progress gradually: Learn navigation shortcuts, such as quick open file (Ctrl+Shift+N), find class (Ctrl+N)",
    "tip3": "Use search effectively: Use the search function (Ctrl+Shift+A) to quickly find and execute any command",
    "tip4": "Customize shortcuts: Customize shortcuts according to personal habits and work requirements",
    "tip5": "Combine usage: Using multiple shortcuts in combination can complete complex operations",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "WebStorm keyboard shortcuts differ slightly on different operating systems, mainly because different systems define certain keys differently. For example, the Ctrl key is used on Windows and Linux, while the Cmd key is used on macOS. This page provides shortcut comparisons for each platform, and you can choose to view based on your system.",
    "commonShortcutsTitle": "Detailed Explanation of Common Shortcut Categories",
    "generalCategory": "General Shortcuts",
    "fileOperationsCategory": "File Operation Shortcuts",
    "editOperationsCategory": "Edit Operation Shortcuts",
    "navigationCategory": "Navigation Shortcuts",
    "multiCursorCategory": "Multi-Cursor Editing",
    "refactoringCategory": "Refactoring Shortcuts",
    "debuggingCategory": "Debugging Shortcuts",
    "vcsCategory": "Version Control Shortcuts",
    "openQuickly": "Open file quickly",
    "findInPath": "Find in path",
    "replaceInPath": "Replace in path",
    "duplicateLine": "Duplicate current line",
    "deleteLine": "Delete current line",
    "smartTypeCompletion": "Smart type completion",
    "basicCompletion": "Basic completion",
    "parameterInfo": "Parameter info",
    "goToDeclaration": "Go to declaration",
    "findUsages": "Find usages",
    "renameSymbol": "Rename symbol",
    "safeDelete": "Safe delete",
    "extractMethod": "Extract method",
    "extractVariable": "Extract variable",
    "runProgram": "Run program",
    "debugProgram": "Debug program",
    "stepOver": "Step over",
    "stepInto": "Step into",
    "resumeProgram": "Resume program",
    "stopProgram": "Stop program",
    "commitChanges": "Commit changes",
    "updateProject": "Update project",
    "bestPracticesTitle": "Best Practice Recommendations",
    "bestPracticesText": "To better use WebStorm keyboard shortcuts, it is recommended to follow these best practices:",
    "practice1": "Progress gradually: Don't try to memorize all shortcuts at once, start with the most commonly used ones",
    "practice2": "Practice exercises: Consciously use shortcuts in daily work to form muscle memory",
    "practice3": "Customize settings: Adjust shortcut settings according to personal habits",
    "practice4": "Use Find Action: Search for all available actions through Ctrl+Shift+A",
    "practice5": "Regular review: Regularly check the shortcut list to discover and learn new shortcuts",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering WebStorm keyboard shortcuts is an important way to improve development efficiency. By using shortcuts appropriately, you can focus more on code writing, reduce repetitive operations, and improve work efficiency. We hope this guide will help you better use WebStorm and enhance your development experience."
  },
  "pycharmPage": {
    "pageTitle": "PyCharm Tool Introduction",
    "back": "Back",
    "mainTitle": "Complete Guide to PyCharm Keyboard Shortcuts",
    "introText": "PyCharm is a powerful Python integrated development environment developed by JetBrains. It provides intelligent code assistance, debugging, testing, and version control capabilities, making it the preferred tool for Python developers.",
    "whyUseShortcutsTitle": "Why Use PyCharm Keyboard Shortcuts?",
    "benefitsText": "Mastering PyCharm keyboard shortcuts can significantly improve your development efficiency:",
    "benefit1": "Improve development efficiency: Avoid frequent mouse switching and focus on code writing",
    "benefit2": "Reduce repetitive operations: Complete complex tasks with one click",
    "benefit3": "Professional image: Proficient use of shortcuts is a hallmark of professional developers",
    "benefit4": "Reduce fatigue: Reduce hand movement and minimize repetitive strain injuries",
    "usageTipsTitle": "PyCharm Keyboard Shortcut Usage Tips",
    "tipsText": "PyCharm's shortcut system is very powerful. Mastering the following tips can help you use it better:",
    "tip1": "Start with basics: First master the most commonly used editing shortcuts, such as copy (Ctrl+C), paste (Ctrl+V), undo (Ctrl+Z), etc.",
    "tip2": "Progress gradually: Learn navigation shortcuts, such as quick open file (Ctrl+Shift+N), find class (Ctrl+N)",
    "tip3": "Use search effectively: Use the search function (Ctrl+Shift+A) to quickly find and execute any command",
    "tip4": "Customize shortcuts: Customize shortcuts according to personal habits and work requirements",
    "tip5": "Combine usage: Using multiple shortcuts in combination can complete complex operations",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "PyCharm keyboard shortcuts differ slightly on different operating systems, mainly because different systems define certain keys differently. For example, the Ctrl key is used on Windows and Linux, while the Cmd key is used on macOS. This page provides shortcut comparisons for each platform, and you can choose to view based on your system.",
    "commonShortcutsTitle": "Detailed Explanation of Common Shortcut Categories",
    "generalCategory": "General Shortcuts",
    "fileOperationsCategory": "File Operation Shortcuts",
    "editOperationsCategory": "Edit Operation Shortcuts",
    "navigationCategory": "Navigation Shortcuts",
    "multiCursorCategory": "Multi-Cursor Editing",
    "refactoringCategory": "Refactoring Shortcuts",
    "debuggingCategory": "Debugging Shortcuts",
    "vcsCategory": "Version Control Shortcuts",
    "openQuickly": "Open file quickly",
    "findInPath": "Find in path",
    "replaceInPath": "Replace in path",
    "duplicateLine": "Duplicate current line",
    "deleteLine": "Delete current line",
    "smartTypeCompletion": "Smart type completion",
    "basicCompletion": "Basic completion",
    "parameterInfo": "Parameter info",
    "goToDeclaration": "Go to declaration",
    "findUsages": "Find usages",
    "renameSymbol": "Rename symbol",
    "safeDelete": "Safe delete",
    "extractMethod": "Extract method",
    "extractVariable": "Extract variable",
    "runProgram": "Run program",
    "debugProgram": "Debug program",
    "stepOver": "Step over",
    "stepInto": "Step into",
    "resumeProgram": "Resume program",
    "stopProgram": "Stop program",
    "commitChanges": "Commit changes",
    "updateProject": "Update project",
    "bestPracticesTitle": "Best Practice Recommendations",
    "bestPracticesText": "To better use PyCharm keyboard shortcuts, it is recommended to follow these best practices:",
    "practice1": "Progress gradually: Don't try to memorize all shortcuts at once, start with the most commonly used ones",
    "practice2": "Practice exercises: Consciously use shortcuts in daily work to form muscle memory",
    "practice3": "Customize settings: Adjust shortcut settings according to personal habits",
    "practice4": "Use Find Action: Search for all available actions through Ctrl+Shift+A",
    "practice5": "Regular review: Regularly check the shortcut list to discover and learn new shortcuts",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering PyCharm keyboard shortcuts is an important way to improve development efficiency. By using shortcuts appropriately, you can focus more on code writing, reduce repetitive operations, and improve work efficiency. We hope this guide will help you better use PyCharm and enhance your development experience."
  },
  "golandPage": {
    "pageTitle": "GoLand Tool Introduction",
    "back": "Back",
    "mainTitle": "Complete Guide to GoLand Keyboard Shortcuts",
    "introText": "GoLand is a powerful Go language integrated development environment developed by JetBrains. It provides intelligent code assistance, debugging, testing, and version control capabilities, making it the preferred tool for Go developers.",
    "whyUseShortcutsTitle": "Why Use GoLand Keyboard Shortcuts?",
    "benefitsText": "Mastering GoLand keyboard shortcuts can significantly improve your development efficiency:",
    "benefit1": "Improve development efficiency: Avoid frequent mouse switching and focus on code writing",
    "benefit2": "Reduce repetitive operations: Complete complex tasks with one click",
    "benefit3": "Professional image: Proficient use of shortcuts is a hallmark of professional developers",
    "benefit4": "Reduce fatigue: Reduce hand movement and minimize repetitive strain injuries",
    "usageTipsTitle": "GoLand Keyboard Shortcut Usage Tips",
    "tipsText": "GoLand's shortcut system is very powerful. Mastering the following tips can help you use it better:",
    "tip1": "Start with basics: First master the most commonly used editing shortcuts, such as copy (Ctrl+C), paste (Ctrl+V), undo (Ctrl+Z), etc.",
    "tip2": "Progress gradually: Learn navigation shortcuts, such as quick open file (Ctrl+Shift+N), find class (Ctrl+N)",
    "tip3": "Use search effectively: Use the search function (Ctrl+Shift+A) to quickly find and execute any command",
    "tip4": "Customize shortcuts: Customize shortcuts according to personal habits and work requirements",
    "tip5": "Combine usage: Using multiple shortcuts in combination can complete complex operations",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "GoLand keyboard shortcuts differ slightly on different operating systems, mainly because different systems define certain keys differently. For example, the Ctrl key is used on Windows and Linux, while the Cmd key is used on macOS. This page provides shortcut comparisons for each platform, and you can choose to view based on your system.",
    "commonShortcutsTitle": "Detailed Explanation of Common Shortcut Categories",
    "generalCategory": "General Shortcuts",
    "fileOperationsCategory": "File Operation Shortcuts",
    "editOperationsCategory": "Edit Operation Shortcuts",
    "navigationCategory": "Navigation Shortcuts",
    "multiCursorCategory": "Multi-Cursor Editing",
    "refactoringCategory": "Refactoring Shortcuts",
    "debuggingCategory": "Debugging Shortcuts",
    "vcsCategory": "Version Control Shortcuts",
    "openQuickly": "Open file quickly",
    "findInPath": "Find in path",
    "replaceInPath": "Replace in path",
    "duplicateLine": "Duplicate current line",
    "deleteLine": "Delete current line",
    "smartTypeCompletion": "Smart type completion",
    "basicCompletion": "Basic completion",
    "parameterInfo": "Parameter info",
    "goToDeclaration": "Go to declaration",
    "findUsages": "Find usages",
    "renameSymbol": "Rename symbol",
    "safeDelete": "Safe delete",
    "extractMethod": "Extract method",
    "extractVariable": "Extract variable",
    "runProgram": "Run program",
    "debugProgram": "Debug program",
    "stepOver": "Step over",
    "stepInto": "Step into",
    "resumeProgram": "Resume program",
    "stopProgram": "Stop program",
    "commitChanges": "Commit changes",
    "updateProject": "Update project",
    "bestPracticesTitle": "Best Practice Recommendations",
    "bestPracticesText": "To better use GoLand keyboard shortcuts, it is recommended to follow these best practices:",
    "practice1": "Progress gradually: Don't try to memorize all shortcuts at once, start with the most commonly used ones",
    "practice2": "Practice exercises: Consciously use shortcuts in daily work to form muscle memory",
    "practice3": "Customize settings: Adjust shortcut settings according to personal habits",
    "practice4": "Use Find Action: Search for all available actions through Ctrl+Shift+A",
    "practice5": "Regular review: Regularly check the shortcut list to discover and learn new shortcuts",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering GoLand keyboard shortcuts is an important way to improve development efficiency. By using shortcuts appropriately, you can focus more on code writing, reduce repetitive operations, and improve work efficiency. We hope this guide will help you better use GoLand and enhance your development experience."
  },
  "clionPage": {
    "pageTitle": "CLion Tool Introduction",
    "back": "Back",
    "mainTitle": "Complete Guide to CLion Keyboard Shortcuts",
    "introText": "CLion is a powerful C/C++ integrated development environment developed by JetBrains. It provides intelligent code assistance, debugging, testing, and version control capabilities, making it the preferred tool for C/C++ developers.",
    "whyUseShortcutsTitle": "Why Use CLion Keyboard Shortcuts?",
    "benefitsText": "Mastering CLion keyboard shortcuts can significantly improve your development efficiency:",
    "benefit1": "Improve development efficiency: Avoid frequent mouse switching and focus on code writing",
    "benefit2": "Reduce repetitive operations: Complete complex tasks with one click",
    "benefit3": "Professional image: Proficient use of shortcuts is a hallmark of professional developers",
    "benefit4": "Reduce fatigue: Reduce hand movement and minimize repetitive strain injuries",
    "usageTipsTitle": "CLion Keyboard Shortcut Usage Tips",
    "tipsText": "CLion's shortcut system is very powerful. Mastering the following tips can help you use it better:",
    "tip1": "Start with basics: First master the most commonly used editing shortcuts, such as copy (Ctrl+C), paste (Ctrl+V), undo (Ctrl+Z), etc.",
    "tip2": "Progress gradually: Learn navigation shortcuts, such as quick open file (Ctrl+Shift+N), find class (Ctrl+N)",
    "tip3": "Use search effectively: Use the search function (Ctrl+Shift+A) to quickly find and execute any command",
    "tip4": "Customize shortcuts: Customize shortcuts according to personal habits and work requirements",
    "tip5": "Combine usage: Using multiple shortcuts in combination can complete complex operations",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "CLion keyboard shortcuts differ slightly on different operating systems, mainly because different systems define certain keys differently. For example, the Ctrl key is used on Windows and Linux, while the Cmd key is used on macOS. This page provides shortcut comparisons for each platform, and you can choose to view based on your system.",
    "commonShortcutsTitle": "Detailed Explanation of Common Shortcut Categories",
    "generalCategory": "General Shortcuts",
    "fileOperationsCategory": "File Operation Shortcuts",
    "editOperationsCategory": "Edit Operation Shortcuts",
    "navigationCategory": "Navigation Shortcuts",
    "multiCursorCategory": "Multi-Cursor Editing",
    "refactoringCategory": "Refactoring Shortcuts",
    "debuggingCategory": "Debugging Shortcuts",
    "vcsCategory": "Version Control Shortcuts",
    "openQuickly": "Open file quickly",
    "findInPath": "Find in path",
    "replaceInPath": "Replace in path",
    "duplicateLine": "Duplicate current line",
    "deleteLine": "Delete current line",
    "smartTypeCompletion": "Smart type completion",
    "basicCompletion": "Basic completion",
    "parameterInfo": "Parameter info",
    "goToDeclaration": "Go to declaration",
    "findUsages": "Find usages",
    "renameSymbol": "Rename symbol",
    "safeDelete": "Safe delete",
    "extractMethod": "Extract method",
    "extractVariable": "Extract variable",
    "runProgram": "Run program",
    "debugProgram": "Debug program",
    "stepOver": "Step over",
    "stepInto": "Step into",
    "resumeProgram": "Resume program",
    "stopProgram": "Stop program",
    "commitChanges": "Commit changes",
    "updateProject": "Update project",
    "bestPracticesTitle": "Best Practice Recommendations",
    "bestPracticesText": "To better use CLion keyboard shortcuts, it is recommended to follow these best practices:",
    "practice1": "Progress gradually: Don't try to memorize all shortcuts at once, start with the most commonly used ones",
    "practice2": "Practice exercises: Consciously use shortcuts in daily work to form muscle memory",
    "practice3": "Customize settings: Adjust shortcut settings according to personal habits",
    "practice4": "Use Find Action: Search for all available actions through Ctrl+Shift+A",
    "practice5": "Regular review: Regularly check the shortcut list to discover and learn new shortcuts",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering CLion keyboard shortcuts is an important way to improve development efficiency. By using shortcuts appropriately, you can focus more on code writing, reduce repetitive operations, and improve work efficiency. We hope this guide will help you better use CLion and enhance your development experience."
  },
  "androidStudioPage": {
    "pageTitle": "Android Studio Tool Introduction",
    "back": "Back",
    "mainTitle": "Complete Guide to Android Studio Keyboard Shortcuts",
    "introText": "Android Studio is the official integrated development environment for Android application development based on IntelliJ IDEA. It provides a complete set of tools for Android development, including code editing, debugging, performance analysis, and more.",
    "whyUseShortcutsTitle": "Why Use Android Studio Keyboard Shortcuts?",
    "benefitsText": "Mastering Android Studio keyboard shortcuts can significantly improve your development efficiency:",
    "benefit1": "Improve development efficiency: Avoid frequent mouse switching and focus on code writing",
    "benefit2": "Reduce repetitive operations: Complete complex tasks with one click",
    "benefit3": "Professional image: Proficient use of shortcuts is a hallmark of professional developers",
    "benefit4": "Reduce fatigue: Reduce hand movement and minimize repetitive strain injuries",
    "usageTipsTitle": "Android Studio Keyboard Shortcut Usage Tips",
    "tipsText": "Android Studio's shortcut system is very powerful. Mastering the following tips can help you use it better:",
    "tip1": "Start with basics: First master the most commonly used editing shortcuts, such as copy (Ctrl+C), paste (Ctrl+V), undo (Ctrl+Z), etc.",
    "tip2": "Progress gradually: Learn navigation shortcuts, such as quick open file (Ctrl+Shift+N), find class (Ctrl+N)",
    "tip3": "Use search effectively: Use the search function (Ctrl+Shift+A) to quickly find and execute any command",
    "tip4": "Customize shortcuts: Customize shortcuts according to personal habits and work requirements",
    "tip5": "Combine usage: Using multiple shortcuts in combination can complete complex operations",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "Android Studio keyboard shortcuts differ slightly on different operating systems, mainly because different systems define certain keys differently. For example, the Ctrl key is used on Windows and Linux, while the Cmd key is used on macOS. This page provides shortcut comparisons for each platform, and you can choose to view based on your system.",
    "commonShortcutsTitle": "Detailed Explanation of Common Shortcut Categories",
    "generalCategory": "General Shortcuts",
    "fileOperationsCategory": "File Operation Shortcuts",
    "editOperationsCategory": "Edit Operation Shortcuts",
    "navigationCategory": "Navigation Shortcuts",
    "multiCursorCategory": "Multi-Cursor Editing",
    "refactoringCategory": "Refactoring Shortcuts",
    "debuggingCategory": "Debugging Shortcuts",
    "vcsCategory": "Version Control Shortcuts",
    "openQuickly": "Open file quickly",
    "findInPath": "Find in path",
    "replaceInPath": "Replace in path",
    "duplicateLine": "Duplicate current line",
    "deleteLine": "Delete current line",
    "smartTypeCompletion": "Smart type completion",
    "basicCompletion": "Basic completion",
    "parameterInfo": "Parameter info",
    "goToDeclaration": "Go to declaration",
    "findUsages": "Find usages",
    "renameSymbol": "Rename symbol",
    "safeDelete": "Safe delete",
    "extractMethod": "Extract method",
    "extractVariable": "Extract variable",
    "runProgram": "Run program",
    "debugProgram": "Debug program",
    "stepOver": "Step over",
    "stepInto": "Step into",
    "resumeProgram": "Resume program",
    "stopProgram": "Stop program",
    "commitChanges": "Commit changes",
    "updateProject": "Update project",
    "bestPracticesTitle": "Best Practice Recommendations",
    "bestPracticesText": "To better use Android Studio keyboard shortcuts, it is recommended to follow these best practices:",
    "practice1": "Progress gradually: Don't try to memorize all shortcuts at once, start with the most commonly used ones",
    "practice2": "Practice exercises: Consciously use shortcuts in daily work to form muscle memory",
    "practice3": "Customize settings: Adjust shortcut settings according to personal habits",
    "practice4": "Use Find Action: Search for all available actions through Ctrl+Shift+A",
    "practice5": "Regular review: Regularly check the shortcut list to discover and learn new shortcuts",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering Android Studio keyboard shortcuts is an important way to improve development efficiency. By using shortcuts appropriately, you can focus more on code writing, reduce repetitive operations, and improve work efficiency. We hope this guide will help you better use Android Studio and enhance your development experience."
  },
  "xcodePage": {
    "pageTitle": "Xcode Tool Introduction",
    "back": "Back",
    "mainTitle": "Complete Guide to Xcode Keyboard Shortcuts",
    "introText": "Xcode is Apple's official integrated development environment for developing applications for macOS, iOS, watchOS, and tvOS. It provides a complete set of tools for Apple platform application development, including interface design, code editing, debugging, and performance analysis.",
    "whyUseShortcutsTitle": "Why Use Xcode Keyboard Shortcuts?",
    "benefitsText": "Mastering Xcode keyboard shortcuts can significantly improve your development efficiency:",
    "benefit1": "Improve development efficiency: Avoid frequent mouse switching and focus on code writing",
    "benefit2": "Reduce repetitive operations: Complete complex tasks with one click",
    "benefit3": "Professional image: Proficient use of shortcuts is a hallmark of professional developers",
    "benefit4": "Reduce fatigue: Reduce hand movement and minimize repetitive strain injuries",
    "usageTipsTitle": "Xcode Keyboard Shortcut Usage Tips",
    "tipsText": "Xcode's shortcut system is very powerful. Mastering the following tips can help you use it better:",
    "tip1": "Progressive learning: Start with the most commonly used shortcuts and gradually learn more",
    "tip2": "Practical application: Deliberately use newly learned shortcuts in daily work",
    "tip3": "Customize shortcuts: Adjust shortcut settings according to personal habits",
    "tip4": "Use Find Action: Search for all available actions through Cmd+Shift+A",
    "tip5": "View shortcut mappings: View the complete shortcut table through Help → Key Bindings",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "Xcode only runs on macOS, so all shortcuts are designed based on the macOS system, primarily using the Cmd key as the main modifier key. This document provides Xcode shortcuts on the macOS platform.",
    "commonShortcutsTitle": "Common Shortcuts",
    "generalCategory": "General Operations",
    "editingCategory": "Editing Operations",
    "navigationCategory": "Navigation Operations",
    "refactoringCategory": "Refactoring Operations",
    "debuggingCategory": "Debugging Operations",
    "openQuickly": "Open file quickly",
    "findInProject": "Find in project",
    "duplicateLine": "Duplicate current line",
    "deleteLine": "Delete current line",
    "jumpToLine": "Jump to line",
    "jumpToFileInProject": "Reveal file in project navigator",
    "renameSymbol": "Rename symbol",
    "showRelatedItems": "Show related items",
    "toggleDebugArea": "Toggle debug area",
    "continueProgram": "Continue program execution",
    "bestPracticesTitle": "Best Practices",
    "bestPracticesText": "To better use Xcode keyboard shortcuts, it is recommended to follow these best practices:",
    "practice1": "Regular review: Regularly review and practice shortcuts to avoid forgetting",
    "practice2": "Combined usage: Combine multiple shortcuts to complete complex tasks",
    "practice3": "Create habits: Develop the habit of using shortcuts to avoid falling back to mouse operations",
    "practice4": "Personalized settings: Adjust shortcut settings according to personal work habits",
    "practice5": "Team unification: Unify common shortcuts with team members for easier collaboration",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering Xcode shortcuts is an important way to improve Apple platform app development efficiency. Through deliberate practice and practical application, you can significantly reduce coding time and improve work quality. Remember, becoming proficient with shortcuts takes time and practice, so don't rush."
  },
  "hbuilderxPage": {
    "pageTitle": "HBuilder X Shortcuts",
    "mainTitle": "Complete Guide to HBuilder X Keyboard Shortcuts",
    "introText": "HBuilder X is a professional front-end IDE developed by DCloud, optimized for uni-app and 5+App development. Mastering HBuilder X shortcuts can significantly improve your front-end development efficiency.",
    "whyUseShortcutsTitle": "Why Use Keyboard Shortcuts?",
    "benefitsText": "Using HBuilder X shortcuts offers many benefits:",
    "benefit1": "Improve development efficiency: Avoid frequent mouse switching and keep hands on the keyboard",
    "benefit2": "Reduce repetitive strain: Reduce fatigue in wrists and fingers",
    "benefit3": "Focus on coding: Reduce operations that interrupt your train of thought",
    "benefit4": "Professional image: Demonstrate the skill level of professional developers",
    "usageTipsTitle": "Usage Tips",
    "tipsText": "To better use HBuilder X shortcuts, it is recommended to follow these tips:",
    "tip1": "Progressive learning: Start with the most commonly used shortcuts and gradually learn more",
    "tip2": "Practical application: Deliberately use newly learned shortcuts in daily work",
    "tip3": "Customize shortcuts: Adjust default shortcuts according to personal habits",
    "tip4": "Use Find Action: Search for all available actions through Ctrl+Shift+P",
    "tip5": "View shortcut mappings: View the complete shortcut table through Help → Shortcut Table",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "HBuilder X shortcuts vary slightly on different operating systems. Windows and Linux use the same shortcuts, while macOS uses the Cmd key instead of the Ctrl key. This document provides shortcuts for all platforms.",
    "commonShortcutsTitle": "Common Shortcuts",
    "generalCategory": "General Operations",
    "editingCategory": "Editing Operations",
    "navigationCategory": "Navigation Operations",
    "refactoringCategory": "Refactoring Operations",
    "columnEditingCategory": "Column Editing Operations",
    "runCurrentPage": "Run current page",
    "debugCurrentPage": "Debug current page",
    "closeCurrentFile": "Close current file",
    "closeAllWindows": "Close all windows",
    "duplicateLine": "Duplicate current line",
    "deleteLine": "Delete current line",
    "copyLineDown": "Copy line down",
    "copyLineUp": "Copy line up",
    "quickOpenFile": "Quick open file",
    "findInFiles": "Find in files",
    "findSymbol": "Find symbol",
    "goToDefinition": "Go to definition",
    "renameSymbol": "Rename symbol",
    "gotoNextError": "Go to next error",
    "gotoPrevError": "Go to previous error",
    "columnSelection": "Column selection",
    "insertCursorBelow": "Insert cursor below",
    "insertCursorAbove": "Insert cursor above",
    "bestPracticesTitle": "Best Practices",
    "bestPracticesText": "When using HBuilder X shortcuts, it is recommended to follow these best practices:",
    "practice1": "Regular review: Regularly review and practice shortcuts to avoid forgetting",
    "practice2": "Combined usage: Combine multiple shortcuts to complete complex tasks",
    "practice3": "Create habits: Develop the habit of using shortcuts to avoid falling back to mouse operations",
    "practice4": "Personalized settings: Adjust shortcut settings according to personal work habits",
    "practice5": "Team unification: Unify common shortcuts with team members for easier collaboration",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering HBuilder X shortcuts is an important way to improve front-end development efficiency. Through deliberate practice and practical application, you can significantly reduce coding time and improve work quality. Remember, becoming proficient with shortcuts takes time and practice, so don't rush."
  },
  "atomPage": {
    "pageTitle": "Atom Shortcuts",
    "mainTitle": "Complete Guide to Atom Keyboard Shortcuts",
    "introText": "Atom is an open-source text editor developed by GitHub, highly customizable, although discontinued, it still has a large user base. Mastering Atom shortcuts can significantly improve your text editing efficiency.",
    "whyUseShortcutsTitle": "Why Use Keyboard Shortcuts?",
    "benefitsText": "Using Atom shortcuts offers many benefits:",
    "benefit1": "Improve editing efficiency: Avoid frequent mouse switching and keep hands on the keyboard",
    "benefit2": "Reduce repetitive strain: Reduce fatigue in wrists and fingers",
    "benefit3": "Focus on text editing: Reduce operations that interrupt your train of thought",
    "benefit4": "Professional image: Demonstrate the skill level of professional developers",
    "usageTipsTitle": "Usage Tips",
    "tipsText": "To better use Atom shortcuts, it is recommended to follow these tips:",
    "tip1": "Progressive learning: Start with the most commonly used shortcuts and gradually learn more",
    "tip2": "Practical application: Deliberately use newly learned shortcuts in daily work",
    "tip3": "Customize shortcuts: Adjust default shortcuts according to personal habits",
    "tip4": "Use Find Action: Search for all available actions through Ctrl+Shift+P (Cmd+Shift+P on macOS)",
    "tip5": "View shortcut mappings: View the complete shortcut table through Help → Key Bindings",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "Atom shortcuts vary slightly on different operating systems. Windows and Linux use the Ctrl key, while macOS uses the Cmd key. This document provides shortcuts for all platforms.",
    "commonShortcutsTitle": "Common Shortcuts",
    "generalCategory": "General Operations",
    "editingCategory": "Editing Operations",
    "navigationCategory": "Navigation Operations",
    "searchCategory": "Search Operations",
    "multiCursorCategory": "Multi-Cursor Operations",
    "viewCategory": "View Operations",
    "duplicateLine": "Duplicate current line",
    "deleteLine": "Delete current line",
    "toggleComment": "Toggle comment",
    "increaseIndent": "Increase indent",
    "decreaseIndent": "Decrease indent",
    "findInCurrentFile": "Find in current file",
    "findInProject": "Find in project",
    "findNext": "Find next",
    "toggleTreeView": "Toggle tree view",
    "toggleFullScreen": "Toggle full screen",
    "increaseFontSize": "Increase font size",
    "addCursorBelow": "Add cursor below",
    "addCursorAbove": "Add cursor above",
    "bestPracticesTitle": "Best Practices",
    "bestPracticesText": "When using Atom shortcuts, it is recommended to follow these best practices:",
    "practice1": "Regular review: Regularly review and practice shortcuts to avoid forgetting",
    "practice2": "Combined usage: Combine multiple shortcuts to complete complex tasks",
    "practice3": "Create habits: Develop the habit of using shortcuts to avoid falling back to mouse operations",
    "practice4": "Personalized settings: Adjust shortcut settings according to personal work habits",
    "practice5": "Team unification: Unify common shortcuts with team members for easier collaboration",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering Atom shortcuts is an important way to improve text editing efficiency. Through deliberate practice and practical application, you can significantly reduce editing time and improve work quality. Remember, becoming proficient with shortcuts takes time and practice, so don't rush."
  },
  "sublimePage": {
    "pageTitle": "Sublime Text Tool Introduction",
    "back": "Back",
    "mainTitle": "Complete Guide to Sublime Text Keyboard Shortcuts",
    "introText": "Sublime Text is a popular text editor known for its speed, clean interface, and powerful features. It supports multiple programming and markup languages, making it especially suitable for writing code, markup, and prose.",
    "whyUseShortcutsTitle": "Why Use Sublime Text Keyboard Shortcuts?",
    "benefitsText": "Mastering Sublime Text keyboard shortcuts can significantly improve your editing efficiency:",
    "benefit1": "Improve editing efficiency: Avoid frequent mouse switching and focus on text writing",
    "benefit2": "Reduce repetitive operations: Complete complex tasks with one click",
    "benefit3": "Professional image: Proficient use of shortcuts is a hallmark of professional developers",
    "benefit4": "Reduce fatigue: Reduce hand movement and minimize repetitive strain injuries",
    "usageTipsTitle": "Sublime Text Keyboard Shortcut Usage Tips",
    "tipsText": "Sublime Text's shortcut system is very powerful. Mastering the following tips can help you use it better:",
    "tip1": "Start with basics: First master the most commonly used editing shortcuts, such as copy (Ctrl+C), paste (Ctrl+V), undo (Ctrl+Z), etc.",
    "tip2": "Progress gradually: Learn navigation shortcuts, such as quick open file (Ctrl+P), command palette (Ctrl+Shift+P)",
    "tip3": "Use search effectively: Use the command palette (Ctrl+Shift+P) to quickly find and execute any command",
    "tip4": "Customize shortcuts: Customize shortcuts according to personal habits and work requirements",
    "tip5": "Combine usage: Using multiple shortcuts in combination can complete complex operations",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "Sublime Text keyboard shortcuts differ slightly on different operating systems, mainly because different systems define certain keys differently. For example, the Ctrl key is used on Windows and Linux, while the Cmd key is used on macOS. This page provides shortcut comparisons for each platform, and you can choose to view based on your system.",
    "commonShortcutsTitle": "Detailed Explanation of Common Shortcut Categories",
    "generalCategory": "General Shortcuts",
    "editingCategory": "Editing Shortcuts",
    "navigationCategory": "Navigation Shortcuts",
    "multiCursorCategory": "Multi-Cursor Editing",
    "selectWord": "Select Current Word",
    "selectAllWords": "Select All Same Words",
    "selectLine": "Select Entire Line",
    "gotoSymbol": "Go to Symbol",
    "gotoLine": "Go to Line",
    "addCursor": "Add Cursor",
    "addCursorAbove": "Add Cursor Above",
    "addCursorBelow": "Add Cursor Below",
    "bestPracticesTitle": "Best Practice Recommendations",
    "bestPracticesText": "To better use Sublime Text keyboard shortcuts, it is recommended to follow these best practices:",
    "practice1": "Progress gradually: Don't try to memorize all shortcuts at once, start with the most commonly used ones",
    "practice2": "Practice exercises: Consciously use shortcuts in daily work to form muscle memory",
    "practice3": "Customize settings: Adjust shortcut settings according to personal habits",
    "practice4": "Use plugins: Install shortcut-related plugins to enhance editor functionality",
    "practice5": "Regular review: Regularly check the shortcut list to discover and learn new shortcuts",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering Sublime Text keyboard shortcuts is an important way to improve editing efficiency. By using shortcuts appropriately, you can focus more on text writing, reduce repetitive operations, and improve work efficiency. We hope this guide will help you better use Sublime Text and enhance your editing experience."
  },
  "eclipsePage": {
    "pageTitle": "Eclipse Tool Introduction",
    "back": "Back",
    "mainTitle": "Complete Guide to Eclipse Keyboard Shortcuts",
    "introText": "Eclipse is a famous open-source integrated development environment, originally developed by IBM. It is primarily used for Java development but supports many other programming languages through plugins.",
    "whyUseShortcutsTitle": "Why Use Eclipse Keyboard Shortcuts?",
    "benefitsText": "Mastering Eclipse keyboard shortcuts can significantly improve your development efficiency:",
    "benefit1": "Improve development efficiency: Avoid frequent mouse switching and focus on code writing",
    "benefit2": "Reduce repetitive operations: Complete complex tasks with one click",
    "benefit3": "Professional image: Proficient use of shortcuts is a hallmark of professional developers",
    "benefit4": "Reduce fatigue: Reduce hand movement and minimize repetitive strain injuries",
    "usageTipsTitle": "Eclipse Keyboard Shortcut Usage Tips",
    "tipsText": "Eclipse's shortcut system is very powerful. Mastering the following tips can help you use it better:",
    "tip1": "Start with basics: First master the most commonly used editing shortcuts, such as copy (Ctrl+C), paste (Ctrl+V), undo (Ctrl+Z), etc.",
    "tip2": "Progress gradually: Learn navigation shortcuts, such as quick open file (Ctrl+Shift+R), find class (Ctrl+Shift+T)",
    "tip3": "Use search effectively: Use the search function (Ctrl+H) to quickly find and execute any command",
    "tip4": "Customize shortcuts: Customize shortcuts according to personal habits and work requirements",
    "tip5": "Combine usage: Using multiple shortcuts in combination can complete complex operations",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "Eclipse keyboard shortcuts differ slightly on different operating systems, mainly because different systems define certain keys differently. For example, the Ctrl key is used on Windows and Linux, while the Cmd key is used on macOS. This page provides shortcut comparisons for each platform, and you can choose to view based on your system.",
    "commonShortcutsTitle": "Detailed Explanation of Common Shortcut Categories",
    "generalCategory": "General Shortcuts",
    "fileOperationsCategory": "File Operation Shortcuts",
    "editOperationsCategory": "Edit Operation Shortcuts",
    "navigationCategory": "Navigation Shortcuts",
    "multiCursorCategory": "Multi-Cursor Editing",
    "refactoringCategory": "Refactoring Shortcuts",
    "debuggingCategory": "Debugging Shortcuts",
    "vcsCategory": "Version Control Shortcuts",
    "openQuickly": "Open file quickly",
    "findInPath": "Find in path",
    "replaceInPath": "Replace in path",
    "duplicateLine": "Duplicate current line",
    "deleteLine": "Delete current line",
    "smartTypeCompletion": "Smart type completion",
    "basicCompletion": "Basic completion",
    "parameterInfo": "Parameter info",
    "goToDeclaration": "Go to declaration",
    "findUsages": "Find usages",
    "renameSymbol": "Rename symbol",
    "safeDelete": "Safe delete",
    "extractMethod": "Extract method",
    "extractVariable": "Extract variable",
    "runProgram": "Run program",
    "debugProgram": "Debug program",
    "stepOver": "Step over",
    "stepInto": "Step into",
    "resumeProgram": "Resume program",
    "stopProgram": "Stop program",
    "commitChanges": "Commit changes",
    "updateProject": "Update project",
    "bestPracticesTitle": "Best Practice Recommendations",
    "bestPracticesText": "To better use Eclipse keyboard shortcuts, it is recommended to follow these best practices:",
    "practice1": "Progress gradually: Don't try to memorize all shortcuts at once, start with the most commonly used ones",
    "practice2": "Practice exercises: Consciously use shortcuts in daily work to form muscle memory",
    "practice3": "Customize settings: Adjust shortcut settings according to personal habits",
    "practice4": "Use Find Action: Search for all available actions through Ctrl+3",
    "practice5": "Regular review: Regularly check the shortcut list to discover and learn new shortcuts",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering Eclipse keyboard shortcuts is an important way to improve development efficiency. By using shortcuts appropriately, you can focus more on code writing, reduce repetitive operations, and improve work efficiency. We hope this guide will help you better use Eclipse and enhance your development experience."
  },
  "photoshopPage": {
    "pageTitle": "Photoshop Tool Introduction",
    "back": "Back",
    "mainTitle": "Complete Guide to Photoshop Keyboard Shortcuts",
    "introText": "Adobe Photoshop is a professional image processing software developed by Adobe Systems. It is widely used in graphic design, photo editing, digital art creation, and other fields.",
    "whyUseShortcutsTitle": "Why Use Photoshop Keyboard Shortcuts?",
    "benefitsText": "Mastering Photoshop keyboard shortcuts can significantly improve your design efficiency:",
    "benefit1": "Improve design efficiency: Avoid frequent mouse switching and focus on creative work",
    "benefit2": "Reduce repetitive operations: Complete complex tasks with one click",
    "benefit3": "Professional image: Proficient use of shortcuts is a hallmark of professional designers",
    "benefit4": "Reduce fatigue: Reduce hand movement and minimize repetitive strain injuries",
    "usageTipsTitle": "Photoshop Keyboard Shortcut Usage Tips",
    "tipsText": "Photoshop's shortcut system is very powerful. Mastering the following tips can help you use it better:",
    "tip1": "Start with basics: First master the most commonly used editing shortcuts, such as copy (Ctrl+C), paste (Ctrl+V), undo (Ctrl+Z), etc.",
    "tip2": "Progress gradually: Learn tool switching shortcuts, such as V for Move tool, B for Brush tool, etc.",
    "tip3": "Use search effectively: Use the search function (Shift+Ctrl+K) to quickly find and execute any command",
    "tip4": "Customize shortcuts: Customize shortcuts according to personal habits and work requirements",
    "tip5": "Combine usage: Using multiple shortcuts in combination can complete complex operations",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "Photoshop keyboard shortcuts differ slightly on different operating systems, mainly because different systems define certain keys differently. For example, the Ctrl key is used on Windows and Linux, while the Cmd key is used on macOS. This page provides shortcut comparisons for each platform, and you can choose to view based on your system.",
    "commonShortcutsTitle": "Detailed Explanation of Common Shortcut Categories",
    "generalCategory": "General Shortcuts",
    "fileOperationsCategory": "File Operation Shortcuts",
    "editOperationsCategory": "Edit Operation Shortcuts",
    "navigationCategory": "Navigation Shortcuts",
    "layerOperationsCategory": "Layer Operation Shortcuts",
    "selectionOperationsCategory": "Selection Operation Shortcuts",
    "newDocument": "New document",
    "openDocument": "Open document",
    "saveDocument": "Save document",
    "saveAs": "Save as",
    "closeDocument": "Close document",
    "undo": "Undo",
    "redo": "Redo",
    "cut": "Cut",
    "copy": "Copy",
    "paste": "Paste",
    "selectAll": "Select all",
    "deselect": "Deselect",
    "zoomIn": "Zoom in",
    "zoomOut": "Zoom out",
    "fitToScreen": "Fit to screen",
    "actualPixels": "Actual pixels",
    "moveTool": "Move tool",
    "rectangleTool": "Rectangle tool",
    "ellipseTool": "Ellipse tool",
    "penTool": "Pen tool",
    "textTool": "Text tool",
    "brushTool": "Brush tool",
    "eraserTool": "Eraser tool",
    "cloneStampTool": "Clone stamp tool",
    "newLayer": "New layer",
    "duplicateLayer": "Duplicate layer",
    "deleteLayer": "Delete layer",
    "mergeLayers": "Merge layers",
    "bestPracticesTitle": "Best Practice Recommendations",
    "bestPracticesText": "To better use Photoshop keyboard shortcuts, it is recommended to follow these best practices:",
    "practice1": "Progress gradually: Don't try to memorize all shortcuts at once, start with the most commonly used ones",
    "practice2": "Practice exercises: Consciously use shortcuts in daily work to form muscle memory",
    "practice3": "Customize settings: Adjust shortcut settings according to personal habits",
    "practice4": "Use search function: Search for all available actions through Shift+Ctrl+K",
    "practice5": "Regular review: Regularly check the shortcut list to discover and learn new shortcuts",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering Photoshop keyboard shortcuts is an important way to improve design efficiency. By using shortcuts appropriately, you can focus more on creative work, reduce repetitive operations, and improve work efficiency. We hope this guide will help you better use Photoshop and enhance your design experience."
  },
  "figmaPage": {
    "pageTitle": "Figma Tool Introduction",
    "back": "Back",
    "mainTitle": "Complete Guide to Figma Keyboard Shortcuts",
    "introText": "Figma is a collaborative interface design tool based on the web. It allows multiple designers to work simultaneously on the same project, making it very suitable for team collaboration.",
    "whyUseShortcutsTitle": "Why Use Figma Keyboard Shortcuts?",
    "benefitsText": "Mastering Figma keyboard shortcuts can significantly improve your design efficiency:",
    "benefit1": "Improve design efficiency: Avoid frequent mouse switching and focus on creative work",
    "benefit2": "Reduce repetitive operations: Complete complex tasks with one click",
    "benefit3": "Professional image: Proficient use of shortcuts is a hallmark of professional designers",
    "benefit4": "Reduce fatigue: Reduce hand movement and minimize repetitive strain injuries",
    "usageTipsTitle": "Figma Keyboard Shortcut Usage Tips",
    "tipsText": "Figma's shortcut system is very powerful. Mastering the following tips can help you use it better:",
    "tip1": "Start with basics: First master the most commonly used editing shortcuts, such as copy (Ctrl+C), paste (Ctrl+V), undo (Ctrl+Z), etc.",
    "tip2": "Progress gradually: Learn tool switching shortcuts, such as V for Move tool, P for Pen tool, etc.",
    "tip3": "Use search effectively: Use the search function (Ctrl+/) to quickly find and execute any command",
    "tip4": "Customize shortcuts: Customize shortcuts according to personal habits and work requirements",
    "tip5": "Combine usage: Using multiple shortcuts in combination can complete complex operations",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "Figma keyboard shortcuts differ slightly on different operating systems, mainly because different systems define certain keys differently. For example, the Ctrl key is used on Windows and Linux, while the Cmd key is used on macOS. This page provides shortcut comparisons for each platform, and you can choose to view based on your system.",
    "commonShortcutsTitle": "Detailed Explanation of Common Shortcut Categories",
    "generalCategory": "General Shortcuts",
    "fileOperationsCategory": "File Operation Shortcuts",
    "editOperationsCategory": "Edit Operation Shortcuts",
    "navigationCategory": "Navigation Shortcuts",
    "toolSwitchingCategory": "Tool Switching Shortcuts",
    "textOperationsCategory": "Text Operation Shortcuts",
    "newFile": "New file",
    "openFile": "Open file",
    "saveFile": "Save file",
    "undo": "Undo",
    "redo": "Redo",
    "cut": "Cut",
    "copy": "Copy",
    "paste": "Paste",
    "selectAll": "Select all",
    "deselect": "Deselect",
    "zoomIn": "Zoom in",
    "zoomOut": "Zoom out",
    "zoomToFit": "Zoom to fit",
    "zoomToSelection": "Zoom to selection",
    "zoomTo100": "Zoom to 100%",
    "moveTool": "Move tool",
    "rectangleTool": "Rectangle tool",
    "ellipseTool": "Ellipse tool",
    "penTool": "Pen tool",
    "textTool": "Text tool",
    "handTool": "Hand tool",
    "addComment": "Add comment",
    "present": "Present",
    "bestPracticesTitle": "Best Practice Recommendations",
    "bestPracticesText": "To better use Figma keyboard shortcuts, it is recommended to follow these best practices:",
    "practice1": "Progress gradually: Don't try to memorize all shortcuts at once, start with the most commonly used ones",
    "practice2": "Practice exercises: Consciously use shortcuts in daily work to form muscle memory",
    "practice3": "Customize settings: Adjust shortcut settings according to personal habits",
    "practice4": "Use search function: Search for all available actions through Ctrl+/",
    "practice5": "Regular review: Regularly check the shortcut list to discover and learn new shortcuts",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering Figma keyboard shortcuts is an important way to improve design efficiency. By using shortcuts appropriately, you can focus more on creative work, reduce repetitive operations, and improve work efficiency. We hope this guide will help you better use Figma and enhance your design experience."
  },
  "chromeDevtoolsPage": {
    "pageTitle": "Chrome DevTools Tool Introduction",
    "back": "Back",
    "mainTitle": "Complete Guide to Chrome DevTools Keyboard Shortcuts",
    "introText": "Chrome DevTools is a set of web development and debugging tools built into Google Chrome. It allows developers to inspect, debug, and optimize web pages and web applications.",
    "whyUseShortcutsTitle": "Why Use Chrome DevTools Keyboard Shortcuts?",
    "benefitsText": "Mastering Chrome DevTools keyboard shortcuts can significantly improve your development efficiency:",
    "benefit1": "Improve development efficiency: Avoid frequent mouse switching and focus on debugging work",
    "benefit2": "Reduce repetitive operations: Complete complex tasks with one click",
    "benefit3": "Professional image: Proficient use of shortcuts is a hallmark of professional developers",
    "benefit4": "Reduce fatigue: Reduce hand movement and minimize repetitive strain injuries",
    "usageTipsTitle": "Chrome DevTools Keyboard Shortcut Usage Tips",
    "tipsText": "Chrome DevTools' shortcut system is very powerful. Mastering the following tips can help you use it better:",
    "tip1": "Start with basics: First master the most commonly used editing shortcuts, such as copy (Ctrl+C), paste (Ctrl+V), undo (Ctrl+Z), etc.",
    "tip2": "Progress gradually: Learn navigation shortcuts, such as opening DevTools (F12), switching panels (Ctrl+Shift+I)",
    "tip3": "Use search effectively: Use the search function (Ctrl+Shift+P) to quickly find and execute any command",
    "tip4": "Customize shortcuts: Customize shortcuts according to personal habits and work requirements",
    "tip5": "Combine usage: Using multiple shortcuts in combination can complete complex operations",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "Chrome DevTools keyboard shortcuts differ slightly on different operating systems, mainly because different systems define certain keys differently. For example, the Ctrl key is used on Windows and Linux, while the Cmd key is used on macOS. This page provides shortcut comparisons for each platform, and you can choose to view based on your system.",
    "commonShortcutsTitle": "Detailed Explanation of Common Shortcut Categories",
    "generalCategory": "General Shortcuts",
    "navigationCategory": "Navigation Shortcuts",
    "elementInspectionCategory": "Element Inspection Shortcuts",
    "consoleOperationsCategory": "Console Operation Shortcuts",
    "debuggingCategory": "Debugging Shortcuts",
    "openDevtools": "Open DevTools",
    "openDevtoolsAlt": "Open DevTools (alternative)",
    "closeDevtools": "Close DevTools",
    "reloadPage": "Reload page",
    "hardReload": "Hard reload",
    "toggleDeviceToolbar": "Toggle device toolbar",
    "selectElement": "Select element",
    "inspectElement": "Inspect element",
    "openConsole": "Open console",
    "clearConsole": "Clear console",
    "toggleBreakpoint": "Toggle breakpoint",
    "stepOver": "Step over",
    "stepInto": "Step into",
    "stepOut": "Step out",
    "resumeExecution": "Resume execution",
    "bestPracticesTitle": "Best Practice Recommendations",
    "bestPracticesText": "To better use Chrome DevTools keyboard shortcuts, it is recommended to follow these best practices:",
    "practice1": "Progress gradually: Don't try to memorize all shortcuts at once, start with the most commonly used ones",
    "practice2": "Practice exercises: Consciously use shortcuts in daily work to form muscle memory",
    "practice3": "Customize settings: Adjust shortcut settings according to personal habits",
    "practice4": "Use command menu: Search for all available actions through Ctrl+Shift+P",
    "practice5": "Regular review: Regularly check the shortcut list to discover and learn new shortcuts",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering Chrome DevTools keyboard shortcuts is an important way to improve development efficiency. By using shortcuts appropriately, you can focus more on debugging work, reduce repetitive operations, and improve work efficiency. We hope this guide will help you better use Chrome DevTools and enhance your development experience."
  },
  "firefoxDevtoolsPage": {
    "pageTitle": "Firefox DevTools Tool Introduction",
    "back": "Back",
    "mainTitle": "Complete Guide to Firefox DevTools Keyboard Shortcuts",
    "introText": "Firefox DevTools is a set of web development and debugging tools built into Mozilla Firefox. It allows developers to inspect, debug, and optimize web pages and web applications.",
    "whyUseShortcutsTitle": "Why Use Firefox DevTools Keyboard Shortcuts?",
    "benefitsText": "Mastering Firefox DevTools keyboard shortcuts can significantly improve your development efficiency:",
    "benefit1": "Improve development efficiency: Avoid frequent mouse switching and focus on debugging work",
    "benefit2": "Reduce repetitive operations: Complete complex tasks with one click",
    "benefit3": "Professional image: Proficient use of shortcuts is a hallmark of professional developers",
    "benefit4": "Reduce fatigue: Reduce hand movement and minimize repetitive strain injuries",
    "usageTipsTitle": "Firefox DevTools Keyboard Shortcut Usage Tips",
    "tipsText": "Firefox DevTools' shortcut system is very powerful. Mastering the following tips can help you use it better:",
    "tip1": "Start with basics: First master the most commonly used editing shortcuts, such as copy (Ctrl+C), paste (Ctrl+V), undo (Ctrl+Z), etc.",
    "tip2": "Progress gradually: Learn navigation shortcuts, such as opening DevTools (F12), switching panels (Ctrl+Shift+I)",
    "tip3": "Use search effectively: Use the search function (Ctrl+Shift+P) to quickly find and execute any command",
    "tip4": "Customize shortcuts: Customize shortcuts according to personal habits and work requirements",
    "tip5": "Combine usage: Using multiple shortcuts in combination can complete complex operations",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "Firefox DevTools keyboard shortcuts differ slightly on different operating systems, mainly because different systems define certain keys differently. For example, the Ctrl key is used on Windows and Linux, while the Cmd key is used on macOS. This page provides shortcut comparisons for each platform, and you can choose to view based on your system.",
    "commonShortcutsTitle": "Detailed Explanation of Common Shortcut Categories",
    "generalCategory": "General Shortcuts",
    "navigationCategory": "Navigation Shortcuts",
    "elementInspectionCategory": "Element Inspection Shortcuts",
    "consoleOperationsCategory": "Console Operation Shortcuts",
    "debuggingCategory": "Debugging Shortcuts",
    "openDevtools": "Open DevTools",
    "openDevtoolsAlt": "Open DevTools (alternative)",
    "closeDevtools": "Close DevTools",
    "reloadPage": "Reload page",
    "hardReload": "Hard reload",
    "toggleDeviceToolbar": "Toggle device toolbar",
    "selectElement": "Select element",
    "inspectElement": "Inspect element",
    "openConsole": "Open console",
    "clearConsole": "Clear console",
    "toggleBreakpoint": "Toggle breakpoint",
    "stepOver": "Step over",
    "stepInto": "Step into",
    "stepOut": "Step out",
    "resumeExecution": "Resume execution",
    "bestPracticesTitle": "Best Practice Recommendations",
    "bestPracticesText": "To better use Firefox DevTools keyboard shortcuts, it is recommended to follow these best practices:",
    "practice1": "Progress gradually: Don't try to memorize all shortcuts at once, start with the most commonly used ones",
    "practice2": "Practice exercises: Consciously use shortcuts in daily work to form muscle memory",
    "practice3": "Customize settings: Adjust shortcut settings according to personal habits",
    "practice4": "Use command menu: Search for all available actions through Ctrl+Shift+P",
    "practice5": "Regular review: Regularly check the shortcut list to discover and learn new shortcuts",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering Firefox DevTools keyboard shortcuts is an important way to improve development efficiency. By using shortcuts appropriately, you can focus more on debugging work, reduce repetitive operations, and improve work efficiency. We hope this guide will help you better use Firefox DevTools and enhance your development experience."
  }
}