{
  "common": {
    "search": "Search",
    "searchPlaceholder": "Search shortcuts, tools or descriptions...",
    "favorites": "Favorites",
    "settings": "Settings",
    "language": "Language",
    "theme": "Theme",
    "light": "Light",
    "dark": "Dark",
    "system": "System",
    "loading": "Loading...",
    "error": "Error",
    "noResults": "No results found",
    "tryAgain": "Try again",
    "back": "Back",
    "home": "Home",
    "about": "About",
    "contact": "Contact"
  },
  "navigation": {
    "tools": "Tools",
    "categories": "Categories",
    "allTools": "All Tools",
    "popularTools": "Popular Tools",
    "recentlyUsed": "Recently Used"
  },
  "categories": {
    "ide": "IDE & Editors",
    "design": "Design Tools",
    "browser": "Browser Tools",
    "terminal": "Terminal & CLI",
    "database": "Database Tools",
    "other": "Other Tools"
  },
  "tools": {
    "vscode": "Visual Studio Code",
    "intellij": "IntelliJ IDEA",
    "webstorm": "WebStorm",
    "pycharm": "PyCharm",
    "goland": "GoLand",
    "clion": "CLion",
    "androidstudio": "Android Studio",
    "xcode": "Xcode",
    "atom": "Atom",
    "sublime": "Sublime Text",
    "vim": "Vim",
    "emacs": "Emacs",
    "notepadpp": "Notepad++",
    "brackets": "Brackets",
    "eclipse": "Eclipse",
    "hbuilderx": "HBuilder X",
    "photoshop": "Adobe Photoshop",
    "figma": "Figma",
    "chrome-devtools": "Chrome DevTools",
    "firefox-devtools": "Firefox DevTools"
  },
  "toolGrid": {
    "myFavorites": "My Favorites",
    "allTools": "All Tools",
    "tools": "Tools",
    "foundTools": "Found {{count}} tools",
    "popularity": "Popularity",
    "name": "Name",
    "updated": "Updated",
    "hotRecommendations": "Hot Recommendations",
    "hot": "Hot",
    "shortcuts": "{{count}} shortcuts",
    "popularityScore": "Popularity: {{score}}",
    "updatedOn": "Updated on {{date}}",
    "noFavoriteTools": "No favorite tools yet",
    "noTools": "No tools available",
    "clickHeartToFavorite": "Click the heart icon on tool cards to favorite tools",
    "noCategoryTools": "No tools available in this category",
    "items": "items"
  },
  "shortcuts": {
    "title": "Keyboard Shortcuts",
    "description": "Description",
    "shortcut": "Shortcut",
    "category": "Category",
    "platform": "Platform",
    "windows": "Windows",
    "mac": "Mac",
    "linux": "Linux",
    "general": "General",
    "editing": "Editing",
    "navigation": "Navigation",
    "search": "Search & Replace",
    "debugging": "Debugging",
    "refactoring": "Refactoring",
    "version_control": "Version Control",
    "file_management": "File Management",
    "view": "View",
    "window": "Window Management"
  },
  "heatmap": {
    "title": "Keyboard Heatmap",
    "description": "Interactive keyboard visualization of shortcut usage",
    "clickKey": "Click a key to view related shortcuts",
    "noShortcuts": "No shortcuts found for this key",
    "keyUsage": "Key usage",
    "relatedShortcuts": "Related Shortcuts",
    "keys": {
      "esc": "Esc",
      "f1": "F1",
      "f2": "F2",
      "f3": "F3",
      "f4": "F4",
      "f5": "F5",
      "f6": "F6",
      "f7": "F7",
      "f8": "F8",
      "f9": "F9",
      "f10": "F10",
      "f11": "F11",
      "f12": "F12",
      "backspace": "Backspace",
      "delete": "Delete",
      "enter": "Enter",
      "return": "Return",
      "tab": "Tab",
      "caps": "Caps",
      "shift": "Shift",
      "ctrl": "Ctrl",
      "alt": "Alt",
      "win": "Win",
      "cmd": "Cmd",
      "option": "Option",
      "fn": "Fn",
      "space": "Space"
    }
  },
  "favorites": {
    "title": "My Favorites",
    "description": "Your favorite tools and shortcuts",
    "addToFavorites": "Add to Favorites",
    "removeFromFavorites": "Remove from Favorites",
    "noFavorites": "No favorites yet",
    "addSomeFavorites": "Add some tools to favorites to view them here"
  },
  "search": {
    "title": "Search Results",
    "searchResults": "Search Results",
    "foundResults": "Found {{count}} results for \"{{query}}\"",
    "noResults": "No results found for \"{{query}}\"",
    "suggestions": "Try searching for:",
    "popularSearches": "Popular Searches",
    "recentSearches": "Recent Searches"
  },
  "footer": {
    "description": "Professional developer keyboard shortcut navigation platform",
    "allRightsReserved": "All Rights Reserved",
    "privacyPolicy": "Privacy Policy",
    "termsOfService": "Terms of Service",
    "support": "Support"
  },
  "meta": {
    "title": "KeyFlow - Developer Shortcut Navigation Platform",
    "description": "KeyFlow is a professional shortcut navigation platform that provides comprehensive shortcuts for mainstream IDEs and editors such as VSCode, IntelliJ IDEA, WebStorm, and PyCharm. With interactive heatmap and global search features, it enhances developer productivity.",
    "keywords": "shortcuts, developer tools, VSCode shortcuts, IntelliJ IDEA shortcuts, WebStorm shortcuts, PyCharm shortcuts, programmer tools, IDE shortcuts, editor shortcuts, development efficiency"
  },
  "toolGrid": {
    "myFavorites": "My Favorites",
    "allTools": "All Tools",
    "tools": "Tools",
    "foundTools": "Found {{count}} tools",
    "popularity": "Popularity",
    "name": "Name",
    "updated": "Updated",
    "hotRecommendations": "Hot Recommendations",
    "hot": "Hot",
    "shortcuts": "{{count}} shortcuts",
    "updatedOn": "Updated on {{date}}",
    "noFavoriteTools": "No favorite tools yet",
    "noTools": "No tools available",
    "clickHeartToFavorite": "Click the heart icon on tool cards to favorite tools",
    "noCategoryTools": "No tools available in this category",
    "items": "items"
  },
  "toolDetail": {
    "allPlatforms": "All Platforms",
    "macOSOnly": "macOS Only",
    "detected": "Detected",
    "searchShortcuts": "Search shortcuts...",
    "allCategories": "All Categories",
    "showing": "Showing {{filtered}} / {{total}} shortcuts",
    "keyboardHeatmap": "Keyboard Heatmap",
    "shortcutList": "Shortcut List",
    "interactiveKeyboardHeatmap": "Interactive Keyboard Heatmap",
    "heatmapDescription": "Click keyboard keys to view corresponding shortcuts. Color intensity represents usage frequency",
    "platforms": {
      "win": "Windows",
      "mac": "macOS",
      "linux": "Linux"
    },
    "toolIntroduction": "Tool Introduction",
    "shortcutKeys": "Shortcut Keys",
    "description": "Description",
    "category": "Category",
    "platform": "Platform",
    "noShortcutsFound": "No matching shortcuts found",
    "tryDifferentSearch": "Try different search terms or filters",
    "heatmapTitle": "Keyboard Heatmap",
    "heatmapDescription": "Visualize the distribution of shortcuts on the keyboard",
    "listView": "List View",
    "heatmapView": "Heatmap View"
  },
  "keyboardHeatmap": {
    "usageFrequency": "Usage Frequency",
    "none": "None",
    "low": "Low",
    "medium": "Medium",
    "high": "High",
    "veryHigh": "Very High",
    "relatedShortcuts": "Related Shortcuts",
    "noShortcuts": "No shortcuts",
    "moreShortcuts": "{{count}} more shortcuts...",
    "items": "items"
  },
  "shortcutList": {
    "totalShortcuts": "Total {{count}} shortcuts across {{categories}} categories",
    "byCategory": "By Category",
    "byDescription": "By Description",
    "allPlatforms": "All Platforms",
    "noShortcutsFound": "No shortcuts found",
    "adjustFilters": "Try adjusting search criteria or filter options",
    "items": "items"
  },
  "searchResults": {
    "searchResults": "Search Results",
    "foundResults": "Found {{count}} results for \"{{query}}\"",
    "clearSearch": "Clear Search",
    "tools": "Tools",
    "shortcuts": "Shortcuts",
    "noResultsFound": "No related results found",
    "tryDifferentKeywords": "Try using different keywords or check spelling",
    "backToBrowse": "Back to Browse Tools",
    "items": "items",
    "allPlatforms": "All Platforms"
  },
  "toolDescriptions": {
    "vscode": "A lightweight code editor developed by Microsoft, supporting multiple programming languages and a rich plugin ecosystem.",
    "sublime": "A high-performance text editor known for its fast response and powerful multi-cursor editing features.",
    "intellij-java": "A Java IDE developed by JetBrains, providing powerful code analysis, refactoring, and debugging features. It's the preferred tool for Java development.",
    "eclipse": "An open-source integrated development environment, primarily used for Java development, supporting multiple programming languages.",
    "android-studio": "Google's official Android app development IDE, built on IntelliJ IDEA.",
    "xcode": "Apple's official iOS and macOS app development IDE, runs only on macOS.",
    "hbuilderx": "A professional front-end IDE developed by DCloud, optimized for uni-app and 5+App development.",
    "webstorm": "A professional Web front-end IDE developed by JetBrains, providing strong support for JavaScript and related technologies.",
    "goland": "A Go language IDE developed by JetBrains, providing intelligent code assistance, debugging, and testing tools for Go development.",
    "pycharm": "A Python IDE developed by JetBrains, providing intelligent code completion, checking, debugging, and refactoring features.",
    "clion": "A C/C++ development environment developed by JetBrains, providing intelligent code assistance and powerful debugging features.",
    "atom": "An open-source text editor developed by GitHub, highly customizable. Although no longer updated, it still has a large user base.",
    "photoshop": "Adobe's professional image editing software, the industry standard for digital image processing.",
    "figma": "A modern collaborative UI design tool that supports real-time collaboration and prototyping.",
    "chrome-devtools": "Developer tools built into Google Chrome browser for web debugging and performance analysis.",
    "firefox-devtools": "Developer tools built into Mozilla Firefox browser, providing powerful web debugging and analysis features."
  },
  "shortcutCategories": {
    "general": "General",
    "file": "File",
    "navigation": "Navigation",
    "editing": "Editing",
    "search": "Search & Replace",
    "debugging": "Debugging",
    "refactoring": "Refactoring",
    "version_control": "Version Control",
    "view": "View",
    "window": "Window Management"
  },
  "shortcutDescriptions": {
    "command_palette": "Command Palette",
    "quick_open": "Quick Open File",
    "new_window": "New Window",
    "close_window": "Close Window",
    "new_file": "New File",
    "open_file": "Open File",
    "save": "Save",
    "save_as": "Save As",
    "save_all": "Save All",
    "close": "Close",
    "close_all": "Close All",
    "reopen_closed": "Reopen Closed Editor",
    "keep_preview": "Keep Preview Mode Editor Open",
    "next_tab": "Open Next",
    "prev_tab": "Open Previous",
    "copy_path": "Copy Active File Path",
    "reveal_in_explorer": "Reveal Active File in Explorer",
    "show_in_new_window": "Show Active File in New Window/Instance",
    "cut": "Cut",
    "copy": "Copy",
    "paste": "Paste",
    "undo": "Undo",
    "redo": "Redo",
    "goto_line": "Go to Line",
    "find": "Find",
    "replace": "Replace",
    "insert_cursor_above": "Insert Cursor Above",
    "insert_cursor_below": "Insert Cursor Below"
  },
  "vscodePage": {
    "pageTitle": "Visual Studio Code Tool Introduction",
    "back": "Back",
    "mainTitle": "Complete Guide to Visual Studio Code Keyboard Shortcuts",
    "introText": "Visual Studio Code (VSCode for short) is a free, open-source modern lightweight code editor developed by Microsoft. It supports almost all major programming languages and has a rich plugin ecosystem, making it one of the most popular code editors today.",
    "whyUseShortcutsTitle": "Why Use VSCode Keyboard Shortcuts?",
    "benefitsText": "Mastering VSCode keyboard shortcuts can significantly improve your development efficiency:",
    "benefit1": "Improve development efficiency: Avoid frequent mouse switching and focus on code writing",
    "benefit2": "Reduce repetitive operations: Complete complex tasks with one click",
    "benefit3": "Professional image: Proficient use of shortcuts is a hallmark of professional developers",
    "benefit4": "Reduce fatigue: Reduce hand movement and minimize repetitive strain injuries",
    "usageTipsTitle": "VSCode Keyboard Shortcut Usage Tips",
    "tipsText": "VSCode's shortcut system is very powerful. Mastering the following tips can help you use it better:",
    "tip1": "Start with basics: First master the most commonly used editing shortcuts, such as copy (Ctrl+C), paste (Ctrl+V), undo (Ctrl+Z), etc.",
    "tip2": "Progress gradually: Learn navigation shortcuts, such as quick open file (Ctrl+P), command palette (Ctrl+Shift+P)",
    "tip3": "Use search effectively: Use the command palette (Ctrl+Shift+P) to quickly find and execute any command",
    "tip4": "Customize shortcuts: Customize shortcuts according to personal habits and work requirements",
    "tip5": "Combine usage: Using multiple shortcuts in combination can complete complex operations",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "VSCode keyboard shortcuts differ slightly on different operating systems, mainly because different systems define certain keys differently. For example, the Ctrl key is used on Windows and Linux, while the Cmd key is used on macOS. This page provides shortcut comparisons for each platform, and you can choose to view based on your system.",
    "commonShortcutsTitle": "Detailed Explanation of Common Shortcut Categories",
    "generalCategory": "General Shortcuts",
    "fileOperationsCategory": "File Operation Shortcuts",
    "editOperationsCategory": "Edit Operation Shortcuts",
    "navigationCategory": "Navigation Shortcuts",
    "multiCursorCategory": "Multi-Cursor Editing",
    "bestPracticesTitle": "Best Practice Recommendations",
    "bestPracticesText": "To better use VSCode keyboard shortcuts, it is recommended to follow these best practices:",
    "practice1": "Progress gradually: Don't try to memorize all shortcuts at once, start with the most commonly used ones",
    "practice2": "Practice exercises: Consciously use shortcuts in daily work to form muscle memory",
    "practice3": "Customize settings: Adjust shortcut settings according to personal habits",
    "practice4": "Use plugins: Install shortcut-related plugins, such as \"Shortcut Menu Bar\" which can display commonly used shortcuts",
    "practice5": "Regular review: Regularly check the shortcut list to discover and learn new shortcuts",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering VSCode keyboard shortcuts is an important way to improve development efficiency. By using shortcuts appropriately, you can focus more on code writing, reduce repetitive operations, and improve work efficiency. We hope this guide will help you better use VSCode and enhance your development experience."
  },
  "sublimePage": {
    "pageTitle": "Sublime Text Tool Introduction",
    "back": "Back",
    "mainTitle": "Complete Guide to Sublime Text Keyboard Shortcuts",
    "introText": "Sublime Text is a popular text editor known for its speed, clean interface, and powerful features. It supports multiple programming and markup languages, making it especially suitable for writing code, markup, and prose.",
    "whyUseShortcutsTitle": "Why Use Sublime Text Keyboard Shortcuts?",
    "benefitsText": "Mastering Sublime Text keyboard shortcuts can significantly improve your editing efficiency:",
    "benefit1": "Improve editing efficiency: Avoid frequent mouse switching and focus on text writing",
    "benefit2": "Reduce repetitive operations: Complete complex tasks with one click",
    "benefit3": "Professional image: Proficient use of shortcuts is a hallmark of professional developers",
    "benefit4": "Reduce fatigue: Reduce hand movement and minimize repetitive strain injuries",
    "usageTipsTitle": "Sublime Text Keyboard Shortcut Usage Tips",
    "tipsText": "Sublime Text's shortcut system is very powerful. Mastering the following tips can help you use it better:",
    "tip1": "Start with basics: First master the most commonly used editing shortcuts, such as copy (Ctrl+C), paste (Ctrl+V), undo (Ctrl+Z), etc.",
    "tip2": "Progress gradually: Learn navigation shortcuts, such as quick open file (Ctrl+P), command palette (Ctrl+Shift+P)",
    "tip3": "Use search effectively: Use the command palette (Ctrl+Shift+P) to quickly find and execute any command",
    "tip4": "Customize shortcuts: Customize shortcuts according to personal habits and work requirements",
    "tip5": "Combine usage: Using multiple shortcuts in combination can complete complex operations",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "Sublime Text keyboard shortcuts differ slightly on different operating systems, mainly because different systems define certain keys differently. For example, the Ctrl key is used on Windows and Linux, while the Cmd key is used on macOS. This page provides shortcut comparisons for each platform, and you can choose to view based on your system.",
    "commonShortcutsTitle": "Detailed Explanation of Common Shortcut Categories",
    "generalCategory": "General Shortcuts",
    "editingCategory": "Editing Shortcuts",
    "navigationCategory": "Navigation Shortcuts",
    "multiCursorCategory": "Multi-Cursor Editing",
    "selectWord": "Select Current Word",
    "selectAllWords": "Select All Same Words",
    "selectLine": "Select Entire Line",
    "gotoSymbol": "Go to Symbol",
    "gotoLine": "Go to Line",
    "addCursor": "Add Cursor",
    "addCursorAbove": "Add Cursor Above",
    "addCursorBelow": "Add Cursor Below",
    "bestPracticesTitle": "Best Practice Recommendations",
    "bestPracticesText": "To better use Sublime Text keyboard shortcuts, it is recommended to follow these best practices:",
    "practice1": "Progress gradually: Don't try to memorize all shortcuts at once, start with the most commonly used ones",
    "practice2": "Practice exercises: Consciously use shortcuts in daily work to form muscle memory",
    "practice3": "Customize settings: Adjust shortcut settings according to personal habits",
    "practice4": "Use plugins: Install shortcut-related plugins to enhance editor functionality",
    "practice5": "Regular review: Regularly check the shortcut list to discover and learn new shortcuts",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering Sublime Text keyboard shortcuts is an important way to improve editing efficiency. By using shortcuts appropriately, you can focus more on text writing, reduce repetitive operations, and improve work efficiency. We hope this guide will help you better use Sublime Text and enhance your editing experience."
  },
  "intellijPage": {
    "pageTitle": "IntelliJ IDEA Tool Introduction",
    "back": "Back",
    "mainTitle": "Complete Guide to IntelliJ IDEA Keyboard Shortcuts",
    "introText": "IntelliJ IDEA is a powerful Java integrated development environment developed by JetBrains. It provides intelligent code assistance, refactoring, debugging, and testing capabilities, making it the preferred tool for Java developers. IntelliJ IDEA is renowned for its excellent code analysis and developer experience.",
    "whyUseShortcutsTitle": "Why Use IntelliJ IDEA Keyboard Shortcuts?",
    "benefitsText": "Mastering IntelliJ IDEA keyboard shortcuts can significantly improve your development efficiency:",
    "benefit1": "Improve development efficiency: Avoid frequent mouse switching and focus on code writing",
    "benefit2": "Reduce repetitive operations: Complete complex tasks with one click",
    "benefit3": "Professional image: Proficient use of shortcuts is a hallmark of professional developers",
    "benefit4": "Reduce fatigue: Reduce hand movement and minimize repetitive strain injuries",
    "usageTipsTitle": "IntelliJ IDEA Keyboard Shortcut Usage Tips",
    "tipsText": "IntelliJ IDEA's shortcut system is very powerful. Mastering the following tips can help you use it better:",
    "tip1": "Start with basics: First master the most commonly used editing shortcuts, such as copy (Ctrl+C), paste (Ctrl+V), undo (Ctrl+Z), etc.",
    "tip2": "Progress gradually: Learn navigation shortcuts, such as quick open file (Ctrl+Shift+N), find class (Ctrl+N)",
    "tip3": "Use search effectively: Use the search function (Ctrl+Shift+A) to quickly find and execute any command",
    "tip4": "Customize shortcuts: Customize shortcuts according to personal habits and work requirements",
    "tip5": "Combine usage: Using multiple shortcuts in combination can complete complex operations",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "IntelliJ IDEA keyboard shortcuts differ slightly on different operating systems, mainly because different systems define certain keys differently. For example, the Ctrl key is used on Windows and Linux, while the Cmd key is used on macOS. This page provides shortcut comparisons for each platform, and you can choose to view based on your system.",
    "commonShortcutsTitle": "Detailed Explanation of Common Shortcut Categories",
    "generalCategory": "General Shortcuts",
    "editingCategory": "Editing Shortcuts",
    "navigationCategory": "Navigation Shortcuts",
    "refactoringCategory": "Refactoring Shortcuts",
    "findAction": "Find Action",
    "searchEverywhere": "Search Everywhere",
    "duplicateLine": "Duplicate Line",
    "deleteLine": "Delete Line",
    "gotoClass": "Go to Class",
    "gotoFile": "Go to File",
    "rename": "Rename",
    "refactorThis": "Refactor This",
    "bestPracticesTitle": "Best Practice Recommendations",
    "bestPracticesText": "To better use IntelliJ IDEA keyboard shortcuts, it is recommended to follow these best practices:",
    "practice1": "Progress gradually: Don't try to memorize all shortcuts at once, start with the most commonly used ones",
    "practice2": "Practice exercises: Consciously use shortcuts in daily work to form muscle memory",
    "practice3": "Customize settings: Adjust shortcut settings according to personal habits",
    "practice4": "Use plugins: Install shortcut-related plugins to enhance IDE functionality",
    "practice5": "Regular review: Regularly check the shortcut list to discover and learn new shortcuts",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering IntelliJ IDEA keyboard shortcuts is an important way to improve development efficiency. By using shortcuts appropriately, you can focus more on code writing, reduce repetitive operations, and improve work efficiency. We hope this guide will help you better use IntelliJ IDEA and enhance your development experience."
  },
  "eclipsePage": {
    "pageTitle": "Eclipse Tool Introduction",
    "back": "Back",
    "mainTitle": "Complete Guide to Eclipse Keyboard Shortcuts",
    "introText": "Eclipse is an open-source integrated development environment, primarily used for Java development, but also supports other programming languages through plugins. It is one of the long-standing and widely used IDEs with a large community support and rich plugin ecosystem.",
    "whyUseShortcutsTitle": "Why Use Eclipse Keyboard Shortcuts?",
    "benefitsText": "Mastering Eclipse keyboard shortcuts can significantly improve your development efficiency:",
    "benefit1": "Improve development efficiency: Avoid frequent mouse switching and focus on code writing",
    "benefit2": "Reduce repetitive operations: Complete complex tasks with one click",
    "benefit3": "Professional image: Proficient use of shortcuts is a hallmark of professional developers",
    "benefit4": "Reduce fatigue: Reduce hand movement and minimize repetitive strain injuries",
    "usageTipsTitle": "Eclipse Keyboard Shortcut Usage Tips",
    "tipsText": "Eclipse's shortcut system is very powerful. Mastering the following tips can help you use it better:",
    "tip1": "Start with basics: First master the most commonly used editing shortcuts, such as copy (Ctrl+C), paste (Ctrl+V), undo (Ctrl+Z), etc.",
    "tip2": "Progress gradually: Learn navigation shortcuts, such as quick open file (Ctrl+Shift+R), find class (Ctrl+Shift+T)",
    "tip3": "Use search effectively: Use quick access (Ctrl+3) to quickly find and execute any command",
    "tip4": "Customize shortcuts: Customize shortcuts according to personal habits and work requirements",
    "tip5": "Combine usage: Using multiple shortcuts in combination can complete complex operations",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "Eclipse keyboard shortcuts differ slightly on different operating systems, mainly because different systems define certain keys differently. For example, the Ctrl key is used on Windows and Linux, while the Cmd key is used on macOS. This page provides shortcut comparisons for each platform, and you can choose to view based on your system.",
    "commonShortcutsTitle": "Detailed Explanation of Common Shortcut Categories",
    "generalCategory": "General Shortcuts",
    "editingCategory": "Editing Shortcuts",
    "navigationCategory": "Navigation Shortcuts",
    "refactoringCategory": "Refactoring Shortcuts",
    "quickAccess": "Quick Access",
    "showAllShortcuts": "Show All Shortcuts",
    "deleteLine": "Delete Line",
    "copyLineDown": "Copy Line Down",
    "openResource": "Open Resource",
    "openType": "Open Type",
    "rename": "Rename",
    "extractLocalVariable": "Extract Local Variable",
    "bestPracticesTitle": "Best Practice Recommendations",
    "bestPracticesText": "To better use Eclipse keyboard shortcuts, it is recommended to follow these best practices:",
    "practice1": "Progress gradually: Don't try to memorize all shortcuts at once, start with the most commonly used ones",
    "practice2": "Practice exercises: Consciously use shortcuts in daily work to form muscle memory",
    "practice3": "Customize settings: Adjust shortcut settings according to personal habits",
    "practice4": "Use plugins: Install shortcut-related plugins to enhance IDE functionality",
    "practice5": "Regular review: Regularly check the shortcut list to discover and learn new shortcuts",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering Eclipse keyboard shortcuts is an important way to improve development efficiency. By using shortcuts appropriately, you can focus more on code writing, reduce repetitive operations, and improve work efficiency. We hope this guide will help you better use Eclipse and enhance your development experience."
  },
  "webstormPage": {
    "pageTitle": "WebStorm Shortcuts",
    "mainTitle": "Complete Guide to WebStorm Keyboard Shortcuts",
    "introText": "WebStorm is a professional web front-end IDE developed by JetBrains, providing powerful intelligent support for JavaScript and related technologies. Mastering WebStorm shortcuts can significantly improve your development efficiency.",
    "whyUseShortcutsTitle": "Why Use Keyboard Shortcuts?",
    "benefitsText": "Using WebStorm shortcuts offers many benefits:",
    "benefit1": "Improve development efficiency: Avoid frequent mouse switching and keep hands on the keyboard",
    "benefit2": "Reduce repetitive strain: Reduce fatigue in wrists and fingers",
    "benefit3": "Focus on coding: Reduce operations that interrupt your train of thought",
    "benefit4": "Professional image: Demonstrate the skill level of professional developers",
    "usageTipsTitle": "Usage Tips",
    "tipsText": "To better use WebStorm shortcuts, it is recommended to follow these tips:",
    "tip1": "Progressive learning: Start with the most commonly used shortcuts and gradually learn more",
    "tip2": "Practical application: Deliberately use newly learned shortcuts in daily work",
    "tip3": "Customize shortcuts: Adjust default shortcuts according to personal habits",
    "tip4": "Use Find Action: Search for all available actions through Ctrl+Shift+A",
    "tip5": "View shortcut mappings: View the complete shortcut table through Help → Keymap Reference",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "WebStorm shortcuts vary slightly on different operating systems. Windows and Linux use the same shortcuts, while macOS uses the Cmd key instead of the Ctrl key. This document provides shortcuts for all platforms.",
    "commonShortcutsTitle": "Common Shortcuts",
    "generalCategory": "General Operations",
    "editingCategory": "Editing Operations",
    "navigationCategory": "Navigation Operations",
    "refactoringCategory": "Refactoring Operations",
    "searchEverywhere": "Search everywhere (classes, files, tool settings, etc.)",
    "findAction": "Find action",
    "duplicateLine": "Duplicate current line",
    "deleteLine": "Delete current line",
    "gotoClass": "Go to class",
    "gotoFile": "Go to file",
    "rename": "Rename",
    "refactorThis": "Refactor this element",
    "bestPracticesTitle": "Best Practices",
    "bestPracticesText": "When using WebStorm shortcuts, it is recommended to follow these best practices:",
    "practice1": "Regular review: Regularly review and practice shortcuts to avoid forgetting",
    "practice2": "Combined use: Combine multiple shortcuts to complete complex tasks",
    "practice3": "Create habits: Develop the habit of using shortcuts to avoid falling back to mouse operations",
    "practice4": "Personalized settings: Adjust shortcut settings according to personal work habits",
    "practice5": "Team unification: Unify common shortcuts with team members for easier collaboration",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering WebStorm shortcuts is an important way to improve development efficiency. Through deliberate practice and practical application, you can significantly reduce coding time and improve work quality. Remember, becoming proficient with shortcuts takes time and practice, so don't rush."
  },
  "pycharmPage": {
    "pageTitle": "PyCharm Shortcuts",
    "mainTitle": "Complete Guide to PyCharm Keyboard Shortcuts",
    "introText": "PyCharm is a Python IDE developed by JetBrains, providing intelligent code completion, inspection, debugging and refactoring functions. Mastering PyCharm shortcuts can significantly improve your Python development efficiency.",
    "whyUseShortcutsTitle": "Why Use Keyboard Shortcuts?",
    "benefitsText": "Using PyCharm shortcuts offers many benefits:",
    "benefit1": "Improve development efficiency: Avoid frequent mouse switching and keep hands on the keyboard",
    "benefit2": "Reduce repetitive strain: Reduce fatigue in wrists and fingers",
    "benefit3": "Focus on coding: Reduce operations that interrupt your train of thought",
    "benefit4": "Professional image: Demonstrate the skill level of professional developers",
    "usageTipsTitle": "Usage Tips",
    "tipsText": "To better use PyCharm shortcuts, it is recommended to follow these tips:",
    "tip1": "Progressive learning: Start with the most commonly used shortcuts and gradually learn more",
    "tip2": "Practical application: Deliberately use newly learned shortcuts in daily work",
    "tip3": "Customize shortcuts: Adjust default shortcuts according to personal habits",
    "tip4": "Use Find Action: Search for all available actions through Ctrl+Shift+A",
    "tip5": "View shortcut mappings: View the complete shortcut table through Help → Keymap Reference",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "PyCharm shortcuts vary slightly on different operating systems. Windows and Linux use the same shortcuts, while macOS uses the Cmd key instead of the Ctrl key. This document provides shortcuts for all platforms.",
    "commonShortcutsTitle": "Common Shortcuts",
    "generalCategory": "General Operations",
    "editingCategory": "Editing Operations",
    "navigationCategory": "Navigation Operations",
    "refactoringCategory": "Refactoring Operations",
    "debuggingCategory": "Debugging Operations",
    "searchEverywhere": "Search everywhere (classes, files, tool settings, etc.)",
    "findAction": "Find action",
    "duplicateLine": "Duplicate current line",
    "deleteLine": "Delete current line",
    "gotoClass": "Go to class",
    "gotoFile": "Go to file",
    "rename": "Rename",
    "refactorThis": "Refactor this element",
    "debug": "Debug",
    "stepOver": "Step over",
    "bestPracticesTitle": "Best Practices",
    "bestPracticesText": "When using PyCharm shortcuts, it is recommended to follow these best practices:",
    "practice1": "Regular review: Regularly review and practice shortcuts to avoid forgetting",
    "practice2": "Combined use: Combine multiple shortcuts to complete complex tasks",
    "practice3": "Create habits: Develop the habit of using shortcuts to avoid falling back to mouse operations",
    "practice4": "Personalized settings: Adjust shortcut settings according to personal work habits",
    "practice5": "Team unification: Unify common shortcuts with team members for easier collaboration",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering PyCharm shortcuts is an important way to improve Python development efficiency. Through deliberate practice and practical application, you can significantly reduce coding time and improve work quality. Remember, becoming proficient with shortcuts takes time and practice, so don't rush."
  },
  "golandPage": {
    "pageTitle": "GoLand Shortcuts",
    "mainTitle": "Complete Guide to GoLand Keyboard Shortcuts",
    "introText": "GoLand is a Go language IDE developed by JetBrains, providing intelligent code assistance, debugging and testing tools for Go development. Mastering GoLand shortcuts can significantly improve your Go development efficiency.",
    "whyUseShortcutsTitle": "Why Use Keyboard Shortcuts?",
    "benefitsText": "Using GoLand shortcuts offers many benefits:",
    "benefit1": "Improve development efficiency: Avoid frequent mouse switching and keep hands on the keyboard",
    "benefit2": "Reduce repetitive strain: Reduce fatigue in wrists and fingers",
    "benefit3": "Focus on coding: Reduce operations that interrupt your train of thought",
    "benefit4": "Professional image: Demonstrate the skill level of professional developers",
    "usageTipsTitle": "Usage Tips",
    "tipsText": "To better use GoLand shortcuts, it is recommended to follow these tips:",
    "tip1": "Progressive learning: Start with the most commonly used shortcuts and gradually learn more",
    "tip2": "Practical application: Deliberately use newly learned shortcuts in daily work",
    "tip3": "Customize shortcuts: Adjust default shortcuts according to personal habits",
    "tip4": "Use Find Action: Search for all available actions through Ctrl+Shift+A",
    "tip5": "View shortcut mappings: View the complete shortcut table through Help → Keymap Reference",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "GoLand shortcuts vary slightly on different operating systems. Windows and Linux use the same shortcuts, while macOS uses the Cmd key instead of the Ctrl key. This document provides shortcuts for all platforms.",
    "commonShortcutsTitle": "Common Shortcuts",
    "generalCategory": "General Operations",
    "editingCategory": "Editing Operations",
    "navigationCategory": "Navigation Operations",
    "refactoringCategory": "Refactoring Operations",
    "debuggingCategory": "Debugging Operations",
    "searchEverywhere": "Search everywhere (classes, files, tool settings, etc.)",
    "findAction": "Find action",
    "duplicateLine": "Duplicate current line",
    "deleteLine": "Delete current line",
    "gotoClass": "Go to class",
    "gotoFile": "Go to file",
    "rename": "Rename",
    "refactorThis": "Refactor this element",
    "debug": "Debug",
    "stepOver": "Step over",
    "bestPracticesTitle": "Best Practices",
    "bestPracticesText": "When using GoLand shortcuts, it is recommended to follow these best practices:",
    "practice1": "Regular review: Regularly review and practice shortcuts to avoid forgetting",
    "practice2": "Combined use: Combine multiple shortcuts to complete complex tasks",
    "practice3": "Create habits: Develop the habit of using shortcuts to avoid falling back to mouse operations",
    "practice4": "Personalized settings: Adjust shortcut settings according to personal work habits",
    "practice5": "Team unification: Unify common shortcuts with team members for easier collaboration",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering GoLand shortcuts is an important way to improve Go development efficiency. Through deliberate practice and practical application, you can significantly reduce coding time and improve work quality. Remember, becoming proficient with shortcuts takes time and practice, so don't rush."
  },
  "clionPage": {
    "pageTitle": "CLion Shortcuts",
    "mainTitle": "Complete Guide to CLion Keyboard Shortcuts",
    "introText": "CLion is a C/C++ development environment developed by JetBrains, providing intelligent code assistance and powerful debugging functions. Mastering CLion shortcuts can significantly improve your C/C++ development efficiency.",
    "whyUseShortcutsTitle": "Why Use Keyboard Shortcuts?",
    "benefitsText": "Using CLion shortcuts offers many benefits:",
    "benefit1": "Improve development efficiency: Avoid frequent mouse switching and keep hands on the keyboard",
    "benefit2": "Reduce repetitive strain: Reduce fatigue in wrists and fingers",
    "benefit3": "Focus on coding: Reduce operations that interrupt your train of thought",
    "benefit4": "Professional image: Demonstrate the skill level of professional developers",
    "usageTipsTitle": "Usage Tips",
    "tipsText": "To better use CLion shortcuts, it is recommended to follow these tips:",
    "tip1": "Progressive learning: Start with the most commonly used shortcuts and gradually learn more",
    "tip2": "Practical application: Deliberately use newly learned shortcuts in daily work",
    "tip3": "Customize shortcuts: Adjust default shortcuts according to personal habits",
    "tip4": "Use Find Action: Search for all available actions through Ctrl+Shift+A",
    "tip5": "View shortcut mappings: View the complete shortcut table through Help → Keymap Reference",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "CLion shortcuts vary slightly on different operating systems. Windows and Linux use the same shortcuts, while macOS uses the Cmd key instead of the Ctrl key. This document provides shortcuts for all platforms.",
    "commonShortcutsTitle": "Common Shortcuts",
    "generalCategory": "General Operations",
    "editingCategory": "Editing Operations",
    "navigationCategory": "Navigation Operations",
    "refactoringCategory": "Refactoring Operations",
    "debuggingCategory": "Debugging Operations",
    "searchEverywhere": "Search everywhere (classes, files, tool settings, etc.)",
    "findAction": "Find action",
    "duplicateLine": "Duplicate current line",
    "deleteLine": "Delete current line",
    "gotoClass": "Go to class",
    "gotoFile": "Go to file",
    "rename": "Rename",
    "refactorThis": "Refactor this element",
    "debug": "Debug",
    "stepOver": "Step over",
    "bestPracticesTitle": "Best Practices",
    "bestPracticesText": "When using CLion shortcuts, it is recommended to follow these best practices:",
    "practice1": "Regular review: Regularly review and practice shortcuts to avoid forgetting",
    "practice2": "Combined use: Combine multiple shortcuts to complete complex tasks",
    "practice3": "Create habits: Develop the habit of using shortcuts to avoid falling back to mouse operations",
    "practice4": "Personalized settings: Adjust shortcut settings according to personal work habits",
    "practice5": "Team unification: Unify common shortcuts with team members for easier collaboration",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering CLion shortcuts is an important way to improve C/C++ development efficiency. Through deliberate practice and practical application, you can significantly reduce coding time and improve work quality. Remember, becoming proficient with shortcuts takes time and practice, so don't rush."
  },
  "androidStudioPage": {
    "pageTitle": "Android Studio Shortcuts",
    "mainTitle": "Complete Guide to Android Studio Keyboard Shortcuts",
    "introText": "Android Studio is Google's official Android app development IDE, built on IntelliJ IDEA. Mastering Android Studio shortcuts can significantly improve your Android development efficiency.",
    "whyUseShortcutsTitle": "Why Use Keyboard Shortcuts?",
    "benefitsText": "Using Android Studio shortcuts offers many benefits:",
    "benefit1": "Improve development efficiency: Avoid frequent mouse switching and keep hands on the keyboard",
    "benefit2": "Reduce repetitive strain: Reduce fatigue in wrists and fingers",
    "benefit3": "Focus on coding: Reduce operations that interrupt your train of thought",
    "benefit4": "Professional image: Demonstrate the skill level of professional developers",
    "usageTipsTitle": "Usage Tips",
    "tipsText": "To better use Android Studio shortcuts, it is recommended to follow these tips:",
    "tip1": "Progressive learning: Start with the most commonly used shortcuts and gradually learn more",
    "tip2": "Practical application: Deliberately use newly learned shortcuts in daily work",
    "tip3": "Customize shortcuts: Adjust default shortcuts according to personal habits",
    "tip4": "Use Find Action: Search for all available actions through Ctrl+Shift+A",
    "tip5": "View shortcut mappings: View the complete shortcut table through Help → Keymap Reference",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "Android Studio shortcuts vary slightly on different operating systems. Windows and Linux use the same shortcuts, while macOS uses the Cmd key instead of the Ctrl key. This document provides shortcuts for all platforms.",
    "commonShortcutsTitle": "Common Shortcuts",
    "generalCategory": "General Operations",
    "editingCategory": "Editing Operations",
    "navigationCategory": "Navigation Operations",
    "refactoringCategory": "Refactoring Operations",
    "debuggingCategory": "Debugging Operations",
    "searchEverywhere": "Search everywhere (classes, files, tool settings, etc.)",
    "findAction": "Find action",
    "duplicateLine": "Duplicate current line",
    "deleteLine": "Delete current line",
    "gotoClass": "Go to class",
    "gotoFile": "Go to file",
    "rename": "Rename",
    "refactorThis": "Refactor this element",
    "debug": "Debug",
    "stepOver": "Step over",
    "bestPracticesTitle": "Best Practices",
    "bestPracticesText": "When using Android Studio shortcuts, it is recommended to follow these best practices:",
    "practice1": "Regular review: Regularly review and practice shortcuts to avoid forgetting",
    "practice2": "Combined use: Combine multiple shortcuts to complete complex tasks",
    "practice3": "Create habits: Develop the habit of using shortcuts to avoid falling back to mouse operations",
    "practice4": "Personalized settings: Adjust shortcut settings according to personal work habits",
    "practice5": "Team unification: Unify common shortcuts with team members for easier collaboration",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering Android Studio shortcuts is an important way to improve Android development efficiency. Through deliberate practice and practical application, you can significantly reduce coding time and improve work quality. Remember, becoming proficient with shortcuts takes time and practice, so don't rush."
  },
  "xcodePage": {
    "pageTitle": "Xcode Shortcuts",
    "mainTitle": "Complete Guide to Xcode Keyboard Shortcuts",
    "introText": "Xcode is Apple's official IDE for iOS and macOS app development, running only on macOS. Mastering Xcode shortcuts can significantly improve your Apple platform app development efficiency.",
    "whyUseShortcutsTitle": "Why Use Keyboard Shortcuts?",
    "benefitsText": "Using Xcode shortcuts offers many benefits:",
    "benefit1": "Improve development efficiency: Avoid frequent mouse switching and keep hands on the keyboard",
    "benefit2": "Reduce repetitive strain: Reduce fatigue in wrists and fingers",
    "benefit3": "Focus on coding: Reduce operations that interrupt your train of thought",
    "benefit4": "Professional image: Demonstrate the skill level of professional developers",
    "usageTipsTitle": "Usage Tips",
    "tipsText": "To better use Xcode shortcuts, it is recommended to follow these tips:",
    "tip1": "Progressive learning: Start with the most commonly used shortcuts and gradually learn more",
    "tip2": "Practical application: Deliberately use newly learned shortcuts in daily work",
    "tip3": "Customize shortcuts: Adjust default shortcuts according to personal habits",
    "tip4": "Use Find Action: Search for all available actions through Cmd+Shift+A",
    "tip5": "View shortcut mappings: View the complete shortcut table through Help → Key Bindings",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "Xcode only runs on macOS, so all shortcuts are designed based on the macOS system, primarily using the Cmd key as the main modifier key. This document provides Xcode shortcuts on the macOS platform.",
    "commonShortcutsTitle": "Common Shortcuts",
    "generalCategory": "General Operations",
    "editingCategory": "Editing Operations",
    "navigationCategory": "Navigation Operations",
    "refactoringCategory": "Refactoring Operations",
    "debuggingCategory": "Debugging Operations",
    "openQuickly": "Open file quickly",
    "findInProject": "Find in project",
    "duplicateLine": "Duplicate current line",
    "deleteLine": "Delete current line",
    "jumpToLine": "Jump to line",
    "jumpToFileInProject": "Reveal file in project navigator",
    "renameSymbol": "Rename symbol",
    "showRelatedItems": "Show related items",
    "toggleDebugArea": "Toggle debug area",
    "continueProgram": "Continue program execution",
    "bestPracticesTitle": "Best Practices",
    "bestPracticesText": "When using Xcode shortcuts, it is recommended to follow these best practices:",
    "practice1": "Regular review: Regularly review and practice shortcuts to avoid forgetting",
    "practice2": "Combined use: Combine multiple shortcuts to complete complex tasks",
    "practice3": "Create habits: Develop the habit of using shortcuts to avoid falling back to mouse operations",
    "practice4": "Personalized settings: Adjust shortcut settings according to personal work habits",
    "practice5": "Team unification: Unify common shortcuts with team members for easier collaboration",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering Xcode shortcuts is an important way to improve Apple platform app development efficiency. Through deliberate practice and practical application, you can significantly reduce coding time and improve work quality. Remember, becoming proficient with shortcuts takes time and practice, so don't rush."
  },
  "hbuilderxPage": {
    "pageTitle": "HBuilder X Shortcuts",
    "mainTitle": "Complete Guide to HBuilder X Keyboard Shortcuts",
    "introText": "HBuilder X is a professional front-end IDE developed by DCloud, optimized for uni-app and 5+App development. Mastering HBuilder X shortcuts can significantly improve your front-end development efficiency.",
    "whyUseShortcutsTitle": "Why Use Keyboard Shortcuts?",
    "benefitsText": "Using HBuilder X shortcuts offers many benefits:",
    "benefit1": "Improve development efficiency: Avoid frequent mouse switching and keep hands on the keyboard",
    "benefit2": "Reduce repetitive strain: Reduce fatigue in wrists and fingers",
    "benefit3": "Focus on coding: Reduce operations that interrupt your train of thought",
    "benefit4": "Professional image: Demonstrate the skill level of professional developers",
    "usageTipsTitle": "Usage Tips",
    "tipsText": "To better use HBuilder X shortcuts, it is recommended to follow these tips:",
    "tip1": "Progressive learning: Start with the most commonly used shortcuts and gradually learn more",
    "tip2": "Practical application: Deliberately use newly learned shortcuts in daily work",
    "tip3": "Customize shortcuts: Adjust default shortcuts according to personal habits",
    "tip4": "Use Find Action: Search for all available actions through Ctrl+Shift+P",
    "tip5": "View shortcut mappings: View the complete shortcut table through Help → Shortcut Table",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "HBuilder X shortcuts vary slightly on different operating systems. Windows and Linux use the same shortcuts, while macOS uses the Cmd key instead of the Ctrl key. This document provides shortcuts for all platforms.",
    "commonShortcutsTitle": "Common Shortcuts",
    "generalCategory": "General Operations",
    "editingCategory": "Editing Operations",
    "navigationCategory": "Navigation Operations",
    "refactoringCategory": "Refactoring Operations",
    "columnEditingCategory": "Column Editing Operations",
    "runCurrentPage": "Run current page",
    "debugCurrentPage": "Debug current page",
    "closeCurrentFile": "Close current file",
    "closeAllWindows": "Close all windows",
    "duplicateLine": "Duplicate current line",
    "deleteLine": "Delete current line",
    "copyLineDown": "Copy line down",
    "copyLineUp": "Copy line up",
    "quickOpenFile": "Quick open file",
    "findInFiles": "Find in files",
    "findSymbol": "Find symbol",
    "goToDefinition": "Go to definition",
    "renameSymbol": "Rename symbol",
    "gotoNextError": "Go to next error",
    "gotoPrevError": "Go to previous error",
    "columnSelection": "Column selection",
    "insertCursorBelow": "Insert cursor below",
    "insertCursorAbove": "Insert cursor above",
    "bestPracticesTitle": "Best Practices",
    "bestPracticesText": "When using HBuilder X shortcuts, it is recommended to follow these best practices:",
    "practice1": "Regular review: Regularly review and practice shortcuts to avoid forgetting",
    "practice2": "Combined use: Combine multiple shortcuts to complete complex tasks",
    "practice3": "Create habits: Develop the habit of using shortcuts to avoid falling back to mouse operations",
    "practice4": "Personalized settings: Adjust shortcut settings according to personal work habits",
    "practice5": "Team unification: Unify common shortcuts with team members for easier collaboration",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering HBuilder X shortcuts is an important way to improve front-end development efficiency. Through deliberate practice and practical application, you can significantly reduce coding time and improve work quality. Remember, becoming proficient with shortcuts takes time and practice, so don't rush."
  },
  "atomPage": {
    "pageTitle": "Atom Shortcuts",
    "mainTitle": "Complete Guide to Atom Keyboard Shortcuts",
    "introText": "Atom is an open-source text editor developed by GitHub, highly customizable, although discontinued, it still has a large user base. Mastering Atom shortcuts can significantly improve your text editing efficiency.",
    "whyUseShortcutsTitle": "Why Use Keyboard Shortcuts?",
    "benefitsText": "Using Atom shortcuts offers many benefits:",
    "benefit1": "Improve editing efficiency: Avoid frequent mouse switching and keep hands on the keyboard",
    "benefit2": "Reduce repetitive strain: Reduce fatigue in wrists and fingers",
    "benefit3": "Focus on text editing: Reduce operations that interrupt your train of thought",
    "benefit4": "Professional image: Demonstrate the skill level of professional developers",
    "usageTipsTitle": "Usage Tips",
    "tipsText": "To better use Atom shortcuts, it is recommended to follow these tips:",
    "tip1": "Progressive learning: Start with the most commonly used shortcuts and gradually learn more",
    "tip2": "Practical application: Deliberately use newly learned shortcuts in daily work",
    "tip3": "Customize shortcuts: Adjust default shortcuts according to personal habits",
    "tip4": "Use command palette: Search for all available actions through Ctrl+Shift+P",
    "tip5": "View shortcut mappings: View the complete shortcut table through Packages → Keybinding Resolver",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "Atom shortcuts vary slightly on different operating systems. Windows and Linux use the same shortcuts, while macOS uses the Cmd key instead of the Ctrl key. This document provides shortcuts for all platforms.",
    "commonShortcutsTitle": "Common Shortcuts",
    "generalCategory": "General Operations",
    "editingCategory": "Editing Operations",
    "navigationCategory": "Navigation Operations",
    "refactoringCategory": "Refactoring Operations",
    "columnEditingCategory": "Column Editing Operations",
    "commandPalette": "Command palette",
    "findInProject": "Find in project",
    "closeCurrentFile": "Close current file",
    "closeAllWindows": "Close all windows",
    "selectNextOccurrence": "Select next occurrence",
    "deleteLine": "Delete current line",
    "duplicateLine": "Duplicate current line",
    "toUpperCase": "Convert to uppercase",
    "toLowerCase": "Convert to lowercase",
    "openFile": "Open file",
    "gotoLine": "Go to line",
    "gotoSymbol": "Go to symbol",
    "goToDefinition": "Go to definition",
    "renameSymbol": "Rename symbol",
    "gotoNextError": "Go to next error",
    "gotoPrevError": "Go to previous error",
    "insertCursorAbove": "Insert cursor above",
    "insertCursorBelow": "Insert cursor below",
    "addCursor": "Add cursor",
    "bestPracticesTitle": "Best Practices",
    "bestPracticesText": "When using Atom shortcuts, it is recommended to follow these best practices:",
    "practice1": "Regular review: Regularly review and practice shortcuts to avoid forgetting",
    "practice2": "Combined use: Combine multiple shortcuts to complete complex tasks",
    "practice3": "Create habits: Develop the habit of using shortcuts to avoid falling back to mouse operations",
    "practice4": "Personalized settings: Adjust shortcut settings according to personal work habits",
    "practice5": "Team unification: Unify common shortcuts with team members for easier collaboration",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering Atom shortcuts is an important way to improve text editing efficiency. Through deliberate practice and practical application, you can significantly reduce editing time and improve work quality. Remember, becoming proficient with shortcuts takes time and practice, so don't rush."
  },
  "photoshopPage": {
    "pageTitle": "Adobe Photoshop Shortcuts",
    "mainTitle": "Complete Guide to Adobe Photoshop Keyboard Shortcuts",
    "introText": "Adobe Photoshop is a professional image editing software and the industry standard for digital image processing. Mastering Photoshop shortcuts can significantly improve your image editing efficiency.",
    "whyUseShortcutsTitle": "Why Use Keyboard Shortcuts?",
    "benefitsText": "Using Photoshop shortcuts offers many benefits:",
    "benefit1": "Improve editing efficiency: Avoid frequent mouse switching and keep hands on the keyboard",
    "benefit2": "Reduce repetitive strain: Reduce fatigue in wrists and fingers",
    "benefit3": "Focus on image editing: Reduce operations that interrupt your train of thought",
    "benefit4": "Professional image: Demonstrate the skill level of professional designers",
    "usageTipsTitle": "Usage Tips",
    "tipsText": "To better use Photoshop shortcuts, it is recommended to follow these tips:",
    "tip1": "Progressive learning: Start with the most commonly used shortcuts and gradually learn more",
    "tip2": "Practical application: Deliberately use newly learned shortcuts in daily work",
    "tip3": "Customize shortcuts: Adjust default shortcuts according to personal habits",
    "tip4": "Use search function: View the complete shortcut table through Edit → Keyboard Shortcuts",
    "tip5": "View shortcut mappings: View the complete shortcut table through Window → Shortcuts",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "Photoshop shortcuts vary slightly on different operating systems. Windows and Linux use the same shortcuts, while macOS uses the Cmd key instead of the Ctrl key. This document provides shortcuts for all platforms.",
    "commonShortcutsTitle": "Common Shortcuts",
    "generalCategory": "General Operations",
    "editingCategory": "Editing Operations",
    "navigationCategory": "Navigation Operations",
    "layerManagementCategory": "Layer Management Operations",
    "selectionCategory": "Selection Operations",
    "toolsCategory": "Tool Operations",
    "openFile": "Open file",
    "saveFile": "Save file",
    "closeFile": "Close file",
    "quitApplication": "Quit application",
    "undo": "Undo",
    "redo": "Redo",
    "duplicateLayer": "Duplicate layer",
    "newLayer": "New layer",
    "fitToScreen": "Fit to screen",
    "actualPixels": "Actual pixels",
    "panTool": "Pan tool",
    "zoomIn": "Zoom in",
    "zoomOut": "Zoom out",
    "toggleLayersPanel": "Toggle layers panel",
    "mergeLayers": "Merge layers",
    "groupLayers": "Group layers",
    "ungroupLayers": "Ungroup layers",
    "selectAll": "Select all",
    "deselect": "Deselect",
    "invertSelection": "Invert selection",
    "copy": "Copy",
    "paste": "Paste",
    "moveTool": "Move tool",
    "rectangleTool": "Rectangle tool",
    "lassoTool": "Lasso tool",
    "magicWandTool": "Magic wand tool",
    "brushTool": "Brush tool",
    "eraserTool": "Eraser tool",
    "bestPracticesTitle": "Best Practices",
    "bestPracticesText": "When using Photoshop shortcuts, it is recommended to follow these best practices:",
    "practice1": "Regular review: Regularly review and practice shortcuts to avoid forgetting",
    "practice2": "Combined use: Combine multiple shortcuts to complete complex tasks",
    "practice3": "Create habits: Develop the habit of using shortcuts to avoid falling back to mouse operations",
    "practice4": "Personalized settings: Adjust shortcut settings according to personal work habits",
    "practice5": "Team unification: Unify common shortcuts with team members for easier collaboration",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering Photoshop shortcuts is an important way to improve image editing efficiency. Through deliberate practice and practical application, you can significantly reduce editing time and improve work quality. Remember, becoming proficient with shortcuts takes time and practice, so don't rush."
  },
  "figmaPage": {
    "pageTitle": "Figma Shortcuts",
    "mainTitle": "Complete Guide to Figma Keyboard Shortcuts",
    "introText": "Figma is a modern collaborative UI design tool that supports real-time collaboration and prototyping. Mastering Figma shortcuts can significantly improve your UI design efficiency.",
    "whyUseShortcutsTitle": "Why Use Keyboard Shortcuts?",
    "benefitsText": "Using Figma shortcuts offers many benefits:",
    "benefit1": "Improve design efficiency: Avoid frequent mouse switching and keep hands on the keyboard",
    "benefit2": "Reduce repetitive strain: Reduce fatigue in wrists and fingers",
    "benefit3": "Focus on UI design: Reduce operations that interrupt your train of thought",
    "benefit4": "Professional image: Demonstrate the skill level of professional designers",
    "usageTipsTitle": "Usage Tips",
    "tipsText": "To better use Figma shortcuts, it is recommended to follow these tips:",
    "tip1": "Progressive learning: Start with the most commonly used shortcuts and gradually learn more",
    "tip2": "Practical application: Deliberately use newly learned shortcuts in daily work",
    "tip3": "Customize shortcuts: Adjust default shortcuts according to personal habits",
    "tip4": "Use search function: Search for all available actions through ? shortcut",
    "tip5": "View shortcut mappings: View the complete shortcut table through Help → Keyboard shortcuts",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "Figma shortcuts vary slightly on different operating systems. Windows and Linux use the same shortcuts, while macOS uses the Cmd key instead of the Ctrl key. This document provides shortcuts for all platforms.",
    "commonShortcutsTitle": "Common Shortcuts",
    "generalCategory": "General Operations",
    "editingCategory": "Editing Operations",
    "navigationCategory": "Navigation Operations",
    "layerCategory": "Layer Operations",
    "toolsCategory": "Tool Operations",
    "multiCursorCategory": "Multi-Cursor Operations",
    "newFile": "New file",
    "saveFile": "Save file",
    "closeWindow": "Close window",
    "renameLayer": "Rename layer",
    "undo": "Undo",
    "redo": "Redo",
    "joinSelection": "Join selection",
    "unjoinSelection": "Unjoin selection",
    "handTool": "Hand tool",
    "zoomToFit": "Zoom to fit",
    "zoomIn": "Zoom in",
    "zoomOut": "Zoom out",
    "zoomToSelection": "Zoom to selection",
    "zoomToFrame": "Zoom to frame",
    "duplicateSelection": "Duplicate selection",
    "groupSelection": "Group selection",
    "ungroupSelection": "Ungroup selection",
    "showHideSelection": "Show/hide selection",
    "lockUnlockSelection": "Lock/unlock selection",
    "moveTool": "Move tool",
    "rectangleTool": "Rectangle tool",
    "frameTool": "Frame tool",
    "textTool": "Text tool",
    "penTool": "Pen tool",
    "vectorTool": "Vector tool",
    "addCursor": "Add cursor",
    "boxSelection": "Box selection",
    "bestPracticesTitle": "Best Practices",
    "bestPracticesText": "When using Figma shortcuts, it is recommended to follow these best practices:",
    "practice1": "Regular review: Regularly review and practice shortcuts to avoid forgetting",
    "practice2": "Combined use: Combine multiple shortcuts to complete complex tasks",
    "practice3": "Create habits: Develop the habit of using shortcuts to avoid falling back to mouse operations",
    "practice4": "Personalized settings: Adjust shortcut settings according to personal work habits",
    "practice5": "Team unification: Unify common shortcuts with team members for easier collaboration",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering Figma shortcuts is an important way to improve UI design efficiency. Through deliberate practice and practical application, you can significantly reduce design time and improve work quality. Remember, becoming proficient with shortcuts takes time and practice, so don't rush."
  },
  "chromeDevtoolsPage": {
    "pageTitle": "Chrome DevTools Shortcuts",
    "mainTitle": "Complete Guide to Chrome DevTools Keyboard Shortcuts",
    "introText": "Chrome DevTools is Google Chrome's built-in developer tool for web page debugging and performance analysis. Mastering Chrome DevTools shortcuts can significantly improve your web page debugging efficiency.",
    "whyUseShortcutsTitle": "Why Use Keyboard Shortcuts?",
    "benefitsText": "Using Chrome DevTools shortcuts offers many benefits:",
    "benefit1": "Improve debugging efficiency: Avoid frequent mouse switching and keep hands on the keyboard",
    "benefit2": "Reduce repetitive strain: Reduce fatigue in wrists and fingers",
    "benefit3": "Focus on web page debugging: Reduce operations that interrupt your train of thought",
    "benefit4": "Professional image: Demonstrate the skill level of professional developers",
    "usageTipsTitle": "Usage Tips",
    "tipsText": "To better use Chrome DevTools shortcuts, it is recommended to follow these tips:",
    "tip1": "Progressive learning: Start with the most commonly used shortcuts and gradually learn more",
    "tip2": "Practical application: Deliberately use newly learned shortcuts in daily work",
    "tip3": "Customize shortcuts: Adjust default shortcuts according to personal habits",
    "tip4": "Use command menu: Search for all available actions through Ctrl+Shift+P",
    "tip5": "View shortcut mappings: View the complete shortcut table through Help → Keyboard shortcuts",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "Chrome DevTools shortcuts vary slightly on different operating systems. Windows and Linux use the same shortcuts, while macOS uses the Cmd key instead of the Ctrl key. This document provides shortcuts for all platforms.",
    "commonShortcutsTitle": "Common Shortcuts",
    "generalCategory": "General Operations",
    "navigationCategory": "Navigation Operations",
    "panelCategory": "Panel Operations",
    "debuggingCategory": "Debugging Operations",
    "elementsCategory": "Elements Operations",
    "consoleCategory": "Console Operations",
    "openDevtools": "Open developer tools",
    "openConsole": "Open console",
    "inspectElement": "Inspect element",
    "reloadPage": "Reload page",
    "hardReload": "Hard reload",
    "clearCacheAndReload": "Clear cache and reload",
    "focusAddressBar": "Focus address bar",
    "toggleDeviceToolbar": "Toggle device toolbar",
    "toggleConsole": "Toggle console",
    "commandMenu": "Command menu",
    "resumeExecution": "Resume execution",
    "stepOver": "Step over",
    "stepInto": "Step into",
    "stepOut": "Step out",
    "toggleBreakpoint": "Toggle breakpoint",
    "hideElement": "Hide element",
    "undoChange": "Undo change",
    "redoChange": "Redo change",
    "clearConsole": "Clear console",
    "bestPracticesTitle": "Best Practices",
    "bestPracticesText": "When using Chrome DevTools shortcuts, it is recommended to follow these best practices:",
    "practice1": "Regular review: Regularly review and practice shortcuts to avoid forgetting",
    "practice2": "Combined use: Combine multiple shortcuts to complete complex tasks",
    "practice3": "Create habits: Develop the habit of using shortcuts to avoid falling back to mouse operations",
    "practice4": "Personalized settings: Adjust shortcut settings according to personal work habits",
    "practice5": "Team unification: Unify common shortcuts with team members for easier collaboration",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering Chrome DevTools shortcuts is an important way to improve web page debugging efficiency. Through deliberate practice and practical application, you can significantly reduce debugging time and improve work quality. Remember, becoming proficient with shortcuts takes time and practice, so don't rush."
  },
  "firefoxDevtoolsPage": {
    "pageTitle": "Firefox DevTools Shortcuts",
    "mainTitle": "Complete Guide to Firefox DevTools Keyboard Shortcuts",
    "introText": "Firefox DevTools is Mozilla Firefox's built-in developer tool that provides powerful web page debugging and analysis capabilities. Mastering Firefox DevTools shortcuts can significantly improve your web page debugging efficiency.",
    "whyUseShortcutsTitle": "Why Use Keyboard Shortcuts?",
    "benefitsText": "Using Firefox DevTools shortcuts offers many benefits:",
    "benefit1": "Improve debugging efficiency: Avoid frequent mouse switching and keep hands on the keyboard",
    "benefit2": "Reduce repetitive strain: Reduce fatigue in wrists and fingers",
    "benefit3": "Focus on web page debugging: Reduce operations that interrupt your train of thought",
    "benefit4": "Professional image: Demonstrate the skill level of professional developers",
    "usageTipsTitle": "Usage Tips",
    "tipsText": "To better use Firefox DevTools shortcuts, it is recommended to follow these tips:",
    "tip1": "Progressive learning: Start with the most commonly used shortcuts and gradually learn more",
    "tip2": "Practical application: Deliberately use newly learned shortcuts in daily work",
    "tip3": "Customize shortcuts: Adjust default shortcuts according to personal habits",
    "tip4": "Use command menu: Search for all available actions through Ctrl+Shift+P",
    "tip5": "View shortcut mappings: View the complete shortcut table through Help → Keyboard shortcuts",
    "platformDifferencesTitle": "Platform Differences",
    "platformDifferencesText": "Firefox DevTools shortcuts vary slightly on different operating systems. Windows and Linux use the same shortcuts, while macOS uses the Cmd key instead of the Ctrl key. This document provides shortcuts for all platforms.",
    "commonShortcutsTitle": "Common Shortcuts",
    "generalCategory": "General Operations",
    "navigationCategory": "Navigation Operations",
    "panelCategory": "Panel Operations",
    "debuggingCategory": "Debugging Operations",
    "elementsCategory": "Elements Operations",
    "consoleCategory": "Console Operations",
    "openDevtools": "Open developer tools",
    "openConsole": "Open console",
    "viewPageSource": "View page source",
    "inspectElement": "Inspect element",
    "reloadPage": "Reload page",
    "hardReload": "Hard reload",
    "focusAddressBar": "Focus address bar",
    "responsiveDesignMode": "Responsive design mode",
    "toggleConsole": "Toggle console",
    "commandMenu": "Command menu",
    "resumeExecution": "Resume execution",
    "stepOver": "Step over",
    "stepInto": "Step into",
    "stepOut": "Step out",
    "toggleBreakpoint": "Toggle breakpoint",
    "hideElement": "Hide element",
    "undoChange": "Undo change",
    "redoChange": "Redo change",
    "clearConsole": "Clear console",
    "bestPracticesTitle": "Best Practices",
    "bestPracticesText": "When using Firefox DevTools shortcuts, it is recommended to follow these best practices:",
    "practice1": "Regular review: Regularly review and practice shortcuts to avoid forgetting",
    "practice2": "Combined use: Combine multiple shortcuts to complete complex tasks",
    "practice3": "Create habits: Develop the habit of using shortcuts to avoid falling back to mouse operations",
    "practice4": "Personalized settings: Adjust shortcut settings according to personal work habits",
    "practice5": "Team unification: Unify common shortcuts with team members for easier collaboration",
    "conclusionTitle": "Conclusion",
    "conclusionText": "Mastering Firefox DevTools shortcuts is an important way to improve web page debugging efficiency. Through deliberate practice and practical application, you can significantly reduce debugging time and improve work quality. Remember, becoming proficient with shortcuts takes time and practice, so don't rush."
  }
}